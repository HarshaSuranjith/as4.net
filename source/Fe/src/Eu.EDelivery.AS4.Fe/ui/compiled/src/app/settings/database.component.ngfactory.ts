/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../src/app/settings/database.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../../../src/app/settings/settings.service';
import * as import10 from '@angular/forms/src/form_builder';
import * as import11 from '../../../../src/app/common/dialog.service';
import * as import12 from '../../../node_modules/@angular/forms/src/directives/reactive_directives/form_group_directive.ngfactory';
import * as import13 from '../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import14 from '../../../../src/app/common/input/input.component';
import * as import15 from '../common/input/input.component.ngfactory';
import * as import16 from '../common/text.directive.ngfactory';
import * as import17 from '../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import18 from '../../../node_modules/@angular/forms/src/directives/reactive_directives/form_control_name.ngfactory';
import * as import19 from '../../../../src/app/settings/runtime.store';
import * as import20 from '@angular/core/src/linker/element_ref';
import * as import21 from '../../../../src/app/common/text.directive';
import * as import22 from '@angular/forms/src/directives/default_value_accessor';
import * as import23 from '@angular/forms/src/directives/control_value_accessor';
import * as import24 from '@angular/forms/src/directives/reactive_directives/form_control_name';
import * as import25 from '@angular/forms/src/directives/ng_control';
import * as import26 from '@angular/forms/src/directives/ng_control_status';
import * as import27 from '@angular/forms/src/directives/reactive_directives/form_group_directive';
import * as import28 from '@angular/forms/src/directives/control_container';
export class Wrapper_DatabaseSettingsComponent {
  /*private*/ _eventHandler:Function;
  context:import0.DatabaseSettingsComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  subscription0:any;
  constructor(p0:any,p1:any,p2:any) {
    this._changed = false;
    this.context = new import0.DatabaseSettingsComponent(p0,p1,p2);
    this._expr_0 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_settings(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.settings = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.isDirty.subscribe(_eventHandler.bind(view,'isDirty'))); }
  }
}
var renderType_DatabaseSettingsComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_DatabaseSettingsComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.DatabaseSettingsComponent>;
  _DatabaseSettingsComponent_0_3:Wrapper_DatabaseSettingsComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_DatabaseSettingsComponent_Host0,renderType_DatabaseSettingsComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'as4-database-settings',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_DatabaseSettingsComponent0(this.viewUtils,this,0,this._el_0);
    this._DatabaseSettingsComponent_0_3 = new Wrapper_DatabaseSettingsComponent(this.injectorGet(import9.SettingsService,this.parentIndex),this.injectorGet(import10.FormBuilder,this.parentIndex),this.injectorGet(import11.DialogService,this.parentIndex));
    this.compView_0.create(this._DatabaseSettingsComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._DatabaseSettingsComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.DatabaseSettingsComponent) && (0 === requestNodeIndex))) { return this._DatabaseSettingsComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DatabaseSettingsComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._DatabaseSettingsComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const DatabaseSettingsComponentNgFactory:import8.ComponentFactory<import0.DatabaseSettingsComponent> = new import8.ComponentFactory<import0.DatabaseSettingsComponent>('as4-database-settings',View_DatabaseSettingsComponent_Host0,import0.DatabaseSettingsComponent);
const styles_DatabaseSettingsComponent:any[] = ([] as any[]);
var renderType_DatabaseSettingsComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_DatabaseSettingsComponent,{});
export class View_DatabaseSettingsComponent0 extends import2.AppView<import0.DatabaseSettingsComponent> {
  _text_0:any;
  _el_1:any;
  _FormGroupDirective_1_3:import12.Wrapper_FormGroupDirective;
  _ControlContainer_1_4:any;
  _NgControlStatusGroup_1_5:import13.Wrapper_NgControlStatusGroup;
  _text_2:any;
  _el_3:any;
  compView_3:import2.AppView<import14.InputComponent>;
  _InputComponent_3_3:import15.Wrapper_InputComponent;
  _text_4:any;
  _el_5:any;
  _TextDirective_5_3:import16.Wrapper_TextDirective;
  _DefaultValueAccessor_5_4:import17.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_5_5:any[];
  _FormControlName_5_6:import18.Wrapper_FormControlName;
  _NgControl_5_7:any;
  _NgControlStatus_5_8:import13.Wrapper_NgControlStatus;
  _text_6:any;
  _text_7:any;
  _el_8:any;
  compView_8:import2.AppView<import14.InputComponent>;
  _InputComponent_8_3:import15.Wrapper_InputComponent;
  _text_9:any;
  _el_10:any;
  _TextDirective_10_3:import16.Wrapper_TextDirective;
  _DefaultValueAccessor_10_4:import17.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_10_5:any[];
  _FormControlName_10_6:import18.Wrapper_FormControlName;
  _NgControl_10_7:any;
  _NgControlStatus_10_8:import13.Wrapper_NgControlStatus;
  _text_11:any;
  _text_12:any;
  _text_13:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_DatabaseSettingsComponent0,renderType_DatabaseSettingsComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'form',new import3.InlineArray2(2,'class','form-horizontal'),(null as any));
    this._FormGroupDirective_1_3 = new import12.Wrapper_FormGroupDirective((null as any),(null as any));
    this._ControlContainer_1_4 = this._FormGroupDirective_1_3.context;
    this._NgControlStatusGroup_1_5 = new import13.Wrapper_NgControlStatusGroup(this._ControlContainer_1_4);
    this._text_2 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'as4-input',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_3 = new import15.View_InputComponent0(this.viewUtils,this,3,this._el_3);
    this._InputComponent_3_3 = new import15.Wrapper_InputComponent(this.parentView.injectorGet(import19.RuntimeStore,this.parentIndex));
    this._text_4 = this.renderer.createText((null as any),'\n                ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,(null as any),'input',new import3.InlineArray8(8,'class','form-control pull-right','formControlName','provider','name','provider','type','text'),(null as any));
    this._TextDirective_5_3 = new import16.Wrapper_TextDirective(new import20.ElementRef(this._el_5),this.renderer);
    this._DefaultValueAccessor_5_4 = new import17.Wrapper_DefaultValueAccessor(this.renderer,new import20.ElementRef(this._el_5));
    this._NG_VALUE_ACCESSOR_5_5 = [this._DefaultValueAccessor_5_4.context];
    this._FormControlName_5_6 = new import18.Wrapper_FormControlName(this._ControlContainer_1_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_5_5);
    this._NgControl_5_7 = this._FormControlName_5_6.context;
    this._NgControlStatus_5_8 = new import13.Wrapper_NgControlStatus(this._NgControl_5_7);
    this._text_6 = this.renderer.createText((null as any),'\n            ',(null as any));
    this.compView_3.create(this._InputComponent_3_3.context);
    this._text_7 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_1,'as4-input',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_8 = new import15.View_InputComponent0(this.viewUtils,this,8,this._el_8);
    this._InputComponent_8_3 = new import15.Wrapper_InputComponent(this.parentView.injectorGet(import19.RuntimeStore,this.parentIndex));
    this._text_9 = this.renderer.createText((null as any),'\n                ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,(null as any),'input',new import3.InlineArray8(8,'class','form-control pull-right','formControlName','connectionString','name','provider','type','text'),(null as any));
    this._TextDirective_10_3 = new import16.Wrapper_TextDirective(new import20.ElementRef(this._el_10),this.renderer);
    this._DefaultValueAccessor_10_4 = new import17.Wrapper_DefaultValueAccessor(this.renderer,new import20.ElementRef(this._el_10));
    this._NG_VALUE_ACCESSOR_10_5 = [this._DefaultValueAccessor_10_4.context];
    this._FormControlName_10_6 = new import18.Wrapper_FormControlName(this._ControlContainer_1_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_10_5);
    this._NgControl_10_7 = this._FormControlName_10_6.context;
    this._NgControlStatus_10_8 = new import13.Wrapper_NgControlStatus(this._NgControl_10_7);
    this._text_11 = this.renderer.createText((null as any),'\n            ',(null as any));
    this.compView_8.create(this._InputComponent_8_3.context);
    this._text_12 = this.renderer.createText(this._el_1,'\n        ',(null as any));
    this._text_13 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray4(4,'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_1));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_5,new import3.InlineArray8(6,'keydown.enter',(null as any),'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_5));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_10,new import3.InlineArray8(6,'keydown.enter',(null as any),'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_10));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._text_12,
      this._text_13
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import21.TextDirective) && (5 === requestNodeIndex))) { return this._TextDirective_5_3.context; }
    if (((token === import22.DefaultValueAccessor) && (5 === requestNodeIndex))) { return this._DefaultValueAccessor_5_4.context; }
    if (((token === import23.NG_VALUE_ACCESSOR) && (5 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_5_5; }
    if (((token === import24.FormControlName) && (5 === requestNodeIndex))) { return this._FormControlName_5_6.context; }
    if (((token === import25.NgControl) && (5 === requestNodeIndex))) { return this._NgControl_5_7; }
    if (((token === import26.NgControlStatus) && (5 === requestNodeIndex))) { return this._NgControlStatus_5_8.context; }
    if (((token === import14.InputComponent) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._InputComponent_3_3.context; }
    if (((token === import21.TextDirective) && (10 === requestNodeIndex))) { return this._TextDirective_10_3.context; }
    if (((token === import22.DefaultValueAccessor) && (10 === requestNodeIndex))) { return this._DefaultValueAccessor_10_4.context; }
    if (((token === import23.NG_VALUE_ACCESSOR) && (10 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_10_5; }
    if (((token === import24.FormControlName) && (10 === requestNodeIndex))) { return this._FormControlName_10_6.context; }
    if (((token === import25.NgControl) && (10 === requestNodeIndex))) { return this._NgControl_10_7; }
    if (((token === import26.NgControlStatus) && (10 === requestNodeIndex))) { return this._NgControlStatus_10_8.context; }
    if (((token === import14.InputComponent) && ((8 <= requestNodeIndex) && (requestNodeIndex <= 11)))) { return this._InputComponent_8_3.context; }
    if (((token === import27.FormGroupDirective) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 12)))) { return this._FormGroupDirective_1_3.context; }
    if (((token === import28.ControlContainer) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 12)))) { return this._ControlContainer_1_4; }
    if (((token === import26.NgControlStatusGroup) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 12)))) { return this._NgControlStatusGroup_1_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = this.context.form;
    this._FormGroupDirective_1_3.check_form(currVal_1_0_0,throwOnChange,false);
    this._FormGroupDirective_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    this._NgControlStatusGroup_1_5.ngDoCheck(this,this._el_1,throwOnChange);
    const currVal_3_0_0:any = 'Provider';
    this._InputComponent_3_3.check_label(currVal_3_0_0,throwOnChange,false);
    if (this._InputComponent_3_3.ngDoCheck(this,this._el_3,throwOnChange)) { this.compView_3.markAsCheckOnce(); }
    this._TextDirective_5_3.ngDoCheck(this,this._el_5,throwOnChange);
    this._DefaultValueAccessor_5_4.ngDoCheck(this,this._el_5,throwOnChange);
    const currVal_5_2_0:any = 'provider';
    this._FormControlName_5_6.check_name(currVal_5_2_0,throwOnChange,false);
    this._FormControlName_5_6.ngDoCheck(this,this._el_5,throwOnChange);
    this._NgControlStatus_5_8.ngDoCheck(this,this._el_5,throwOnChange);
    const currVal_8_0_0:any = 'Connectionstring';
    this._InputComponent_8_3.check_label(currVal_8_0_0,throwOnChange,false);
    if (this._InputComponent_8_3.ngDoCheck(this,this._el_8,throwOnChange)) { this.compView_8.markAsCheckOnce(); }
    this._TextDirective_10_3.ngDoCheck(this,this._el_10,throwOnChange);
    this._DefaultValueAccessor_10_4.ngDoCheck(this,this._el_10,throwOnChange);
    const currVal_10_2_0:any = 'connectionString';
    this._FormControlName_10_6.check_name(currVal_10_2_0,throwOnChange,false);
    this._FormControlName_10_6.ngDoCheck(this,this._el_10,throwOnChange);
    this._NgControlStatus_10_8.ngDoCheck(this,this._el_10,throwOnChange);
    this._NgControlStatusGroup_1_5.checkHost(this,this,this._el_1,throwOnChange);
    this._NgControlStatus_5_8.checkHost(this,this,this._el_5,throwOnChange);
    this._NgControlStatus_10_8.checkHost(this,this,this._el_10,throwOnChange);
    this.compView_3.internalDetectChanges(throwOnChange);
    this.compView_8.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_3.destroy();
    this.compView_8.destroy();
    this._FormControlName_5_6.ngOnDestroy();
    this._FormControlName_10_6.ngOnDestroy();
    this._FormGroupDirective_1_3.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 3) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 3) && (ngContentIndex == 1))) {
      cb(this._text_4,ctx);
      cb(this._el_5,ctx);
      cb(this._text_6,ctx);
    }
    if (((nodeIndex == 8) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 8) && (ngContentIndex == 1))) {
      cb(this._text_9,ctx);
      cb(this._el_10,ctx);
      cb(this._text_11,ctx);
    }
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._FormGroupDirective_1_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_5(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_5_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'keydown.enter')) {
      const pd_sub_0:any = ((<any>this.context.save()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_10(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_10_4.handleEvent(eventName,$event) && result);
    if ((eventName == 'keydown.enter')) {
      const pd_sub_0:any = ((<any>this.context.save()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}