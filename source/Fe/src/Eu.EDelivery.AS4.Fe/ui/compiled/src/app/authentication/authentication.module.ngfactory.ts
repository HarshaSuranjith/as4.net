/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '../../../../src/app/authentication/authentication.module';
import * as import2 from '@angular/router/src/router_module';
import * as import3 from '@angular/forms/src/directives';
import * as import4 from '@angular/forms/src/form_providers';
import * as import5 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import6 from '../../../../src/app/authentication/authentication.service';
import * as import7 from '@angular/core/src/di/injector';
import * as import8 from './login/login.component.ngfactory';
import * as import9 from '../../../../src/app/authentication/login/login.component';
import * as import10 from '@angular/http/src/http';
import * as import11 from 'angular2-jwt/angular2-jwt';
import * as import12 from '@angular/router/src/router';
import * as import13 from '@angular/router/src/router_config_loader';
class AuthenticationModuleInjector extends import0.NgModuleInjector<import1.AuthenticationModule> {
  _RouterModule_0:import2.RouterModule;
  _InternalFormsSharedModule_1:import3.InternalFormsSharedModule;
  _FormsModule_2:import4.FormsModule;
  _AuthenticationModule_3:import1.AuthenticationModule;
  __RadioControlRegistry_4:import5.RadioControlRegistry;
  __ROUTES_5:any[];
  __AuthenticationStore_6:import6.AuthenticationStore;
  __AuthenticationService_7:import6.AuthenticationService;
  constructor(parent:import7.Injector) {
    super(parent,[import8.LoginComponentNgFactory],([] as any[]));
  }
  get _RadioControlRegistry_4():import5.RadioControlRegistry {
    if ((this.__RadioControlRegistry_4 == null)) { (this.__RadioControlRegistry_4 = new import5.RadioControlRegistry()); }
    return this.__RadioControlRegistry_4;
  }
  get _ROUTES_5():any[] {
        if ((this.__ROUTES_5 == null)) { (this.__ROUTES_5 = [[{
          path: 'login',
          component: import9.LoginComponent
        }
    ]]); }
    return this.__ROUTES_5;
  }
  get _AuthenticationStore_6():import6.AuthenticationStore {
    if ((this.__AuthenticationStore_6 == null)) { (this.__AuthenticationStore_6 = new import6.AuthenticationStore()); }
    return this.__AuthenticationStore_6;
  }
  get _AuthenticationService_7():import6.AuthenticationService {
    if ((this.__AuthenticationService_7 == null)) { (this.__AuthenticationService_7 = new import6.AuthenticationService(this.parent.get(import10.Http),this._AuthenticationStore_6,this.parent.get(import11.JwtHelper),this.parent.get(import12.Router))); }
    return this.__AuthenticationService_7;
  }
  createInternal():import1.AuthenticationModule {
    this._RouterModule_0 = new import2.RouterModule(this.parent.get(import2.ROUTER_FORROOT_GUARD,(null as any)));
    this._InternalFormsSharedModule_1 = new import3.InternalFormsSharedModule();
    this._FormsModule_2 = new import4.FormsModule();
    this._AuthenticationModule_3 = new import1.AuthenticationModule();
    return this._AuthenticationModule_3;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.RouterModule)) { return this._RouterModule_0; }
    if ((token === import3.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_1; }
    if ((token === import4.FormsModule)) { return this._FormsModule_2; }
    if ((token === import1.AuthenticationModule)) { return this._AuthenticationModule_3; }
    if ((token === import5.RadioControlRegistry)) { return this._RadioControlRegistry_4; }
    if ((token === import13.ROUTES)) { return this._ROUTES_5; }
    if ((token === import6.AuthenticationStore)) { return this._AuthenticationStore_6; }
    if ((token === import6.AuthenticationService)) { return this._AuthenticationService_7; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const AuthenticationModuleNgFactory:import0.NgModuleFactory<import1.AuthenticationModule> = new import0.NgModuleFactory(AuthenticationModuleInjector,import1.AuthenticationModule);