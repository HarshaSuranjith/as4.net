/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../src/app/settings/base.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../../../src/app/settings/settings.service';
import * as import10 from '@angular/forms/src/form_builder';
import * as import11 from '../../../../src/app/settings/runtime.store';
import * as import12 from '../../../../src/app/common/dialog.service';
import * as import13 from '../../../node_modules/@angular/forms/src/directives/select_control_value_accessor.ngfactory';
import * as import14 from '../../../node_modules/@angular/forms/src/directives/select_multiple_control_value_accessor.ngfactory';
import * as import15 from '@angular/core/src/linker/view_container';
import * as import16 from '@angular/core/src/linker/element_ref';
import * as import17 from '@angular/forms/src/directives/select_control_value_accessor';
import * as import18 from '@angular/forms/src/directives/select_multiple_control_value_accessor';
import * as import19 from '../../../node_modules/@angular/forms/src/directives/reactive_directives/form_group_directive.ngfactory';
import * as import20 from '../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import21 from '../../../../src/app/common/input/input.component';
import * as import22 from '../common/input/input.component.ngfactory';
import * as import23 from '../common/text.directive.ngfactory';
import * as import24 from '../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import25 from '../../../node_modules/@angular/forms/src/directives/reactive_directives/form_control_name.ngfactory';
import * as import26 from '../../../node_modules/@angular/forms/src/directives/reactive_directives/form_group_name.ngfactory';
import * as import27 from '../common/selectdirective.ngfactory';
import * as import28 from '../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import29 from '@angular/core/src/linker/template_ref';
import * as import30 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import31 from '../../../../src/app/common/text.directive';
import * as import32 from '@angular/forms/src/directives/default_value_accessor';
import * as import33 from '@angular/forms/src/directives/control_value_accessor';
import * as import34 from '@angular/forms/src/directives/reactive_directives/form_control_name';
import * as import35 from '@angular/forms/src/directives/ng_control';
import * as import36 from '@angular/forms/src/directives/ng_control_status';
import * as import37 from '@angular/forms/src/directives/reactive_directives/form_group_name';
import * as import38 from '@angular/forms/src/directives/control_container';
import * as import39 from '@angular/common/src/directives/ng_for';
import * as import40 from '../../../../src/app/common/selectdirective';
import * as import41 from '@angular/forms/src/directives/reactive_directives/form_group_directive';
export class Wrapper_BaseSettingsComponent {
  /*private*/ _eventHandler:Function;
  context:import0.BaseSettingsComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  subscription0:any;
  constructor(p0:any,p1:any,p2:any,p3:any) {
    this._changed = false;
    this.context = new import0.BaseSettingsComponent(p0,p1,p2,p3);
    this._expr_0 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_settings(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.settings = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.isDirty.subscribe(_eventHandler.bind(view,'isDirty'))); }
  }
}
var renderType_BaseSettingsComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_BaseSettingsComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.BaseSettingsComponent>;
  _BaseSettingsComponent_0_3:Wrapper_BaseSettingsComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_BaseSettingsComponent_Host0,renderType_BaseSettingsComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'as4-base-settings',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_BaseSettingsComponent0(this.viewUtils,this,0,this._el_0);
    this._BaseSettingsComponent_0_3 = new Wrapper_BaseSettingsComponent(this.injectorGet(import9.SettingsService,this.parentIndex),this.injectorGet(import10.FormBuilder,this.parentIndex),this.injectorGet(import11.RuntimeStore,this.parentIndex),this.injectorGet(import12.DialogService,this.parentIndex));
    this.compView_0.create(this._BaseSettingsComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._BaseSettingsComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.BaseSettingsComponent) && (0 === requestNodeIndex))) { return this._BaseSettingsComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._BaseSettingsComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._BaseSettingsComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const BaseSettingsComponentNgFactory:import8.ComponentFactory<import0.BaseSettingsComponent> = new import8.ComponentFactory<import0.BaseSettingsComponent>('as4-base-settings',View_BaseSettingsComponent_Host0,import0.BaseSettingsComponent);
const styles_BaseSettingsComponent:any[] = ([] as any[]);
class View_BaseSettingsComponent1 extends import2.AppView<any> {
  _el_0:any;
  _NgSelectOption_0_3:import13.Wrapper_NgSelectOption;
  _NgSelectMultipleOption_0_4:import14.Wrapper_NgSelectMultipleOption;
  _text_1:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import15.ViewContainer) {
    super(View_BaseSettingsComponent1,renderType_BaseSettingsComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_4 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'option',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._NgSelectOption_0_3 = new import13.Wrapper_NgSelectOption(new import16.ElementRef(this._el_0),this.renderer,(<View_BaseSettingsComponent0>this.parentView)._SelectControlValueAccessor_17_4.context);
    this._NgSelectMultipleOption_0_4 = new import14.Wrapper_NgSelectMultipleOption(new import16.ElementRef(this._el_0),this.renderer,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import17.NgSelectOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgSelectOption_0_3.context; }
    if (((token === import18.NgSelectMultipleOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgSelectMultipleOption_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.context.$implicit.technicalName;
    this._NgSelectOption_0_3.check_value(currVal_0_0_0,throwOnChange,false);
    this._NgSelectOption_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_1_0:any = this.context.$implicit.technicalName;
    this._NgSelectMultipleOption_0_4.check_value(currVal_0_1_0,throwOnChange,false);
    this._NgSelectMultipleOption_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_4:any = import3.inlineInterpolate(1,'',this.context.$implicit.name,'');
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setText(this._text_1,currVal_4);
      this._expr_4 = currVal_4;
    }
  }
  destroyInternal():void {
    this._NgSelectOption_0_3.ngOnDestroy();
    this._NgSelectMultipleOption_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
var renderType_BaseSettingsComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_BaseSettingsComponent,{});
export class View_BaseSettingsComponent0 extends import2.AppView<import0.BaseSettingsComponent> {
  _text_0:any;
  _el_1:any;
  _FormGroupDirective_1_3:import19.Wrapper_FormGroupDirective;
  _ControlContainer_1_4:any;
  _NgControlStatusGroup_1_5:import20.Wrapper_NgControlStatusGroup;
  _text_2:any;
  _el_3:any;
  compView_3:import2.AppView<import21.InputComponent>;
  _InputComponent_3_3:import22.Wrapper_InputComponent;
  _text_4:any;
  _el_5:any;
  _TextDirective_5_3:import23.Wrapper_TextDirective;
  _DefaultValueAccessor_5_4:import24.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_5_5:any[];
  _FormControlName_5_6:import25.Wrapper_FormControlName;
  _NgControl_5_7:any;
  _NgControlStatus_5_8:import20.Wrapper_NgControlStatus;
  _text_6:any;
  _text_7:any;
  _el_8:any;
  compView_8:import2.AppView<import21.InputComponent>;
  _InputComponent_8_3:import22.Wrapper_InputComponent;
  _FormGroupName_8_4:import26.Wrapper_FormGroupName;
  _ControlContainer_8_5:any;
  _NgControlStatusGroup_8_6:import20.Wrapper_NgControlStatusGroup;
  _text_9:any;
  _el_10:any;
  _TextDirective_10_3:import23.Wrapper_TextDirective;
  _DefaultValueAccessor_10_4:import24.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_10_5:any[];
  _FormControlName_10_6:import25.Wrapper_FormControlName;
  _NgControl_10_7:any;
  _NgControlStatus_10_8:import20.Wrapper_NgControlStatus;
  _text_11:any;
  _text_12:any;
  _el_13:any;
  _FormGroupName_13_3:import26.Wrapper_FormGroupName;
  _ControlContainer_13_4:any;
  _NgControlStatusGroup_13_5:import20.Wrapper_NgControlStatusGroup;
  _text_14:any;
  _el_15:any;
  compView_15:import2.AppView<import21.InputComponent>;
  _InputComponent_15_3:import22.Wrapper_InputComponent;
  _FormGroupName_15_4:import26.Wrapper_FormGroupName;
  _ControlContainer_15_5:any;
  _NgControlStatusGroup_15_6:import20.Wrapper_NgControlStatusGroup;
  _text_16:any;
  _el_17:any;
  _SelectDirective_17_3:import27.Wrapper_SelectDirective;
  _SelectControlValueAccessor_17_4:import13.Wrapper_SelectControlValueAccessor;
  _NG_VALUE_ACCESSOR_17_5:any[];
  _FormControlName_17_6:import25.Wrapper_FormControlName;
  _NgControl_17_7:any;
  _NgControlStatus_17_8:import20.Wrapper_NgControlStatus;
  _text_18:any;
  _anchor_19:any;
  /*private*/ _vc_19:import15.ViewContainer;
  _TemplateRef_19_5:any;
  _NgFor_19_6:import28.Wrapper_NgFor;
  _text_20:any;
  _text_21:any;
  _text_22:any;
  _text_23:any;
  _text_24:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_BaseSettingsComponent0,renderType_BaseSettingsComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'form',new import3.InlineArray2(2,'class','form-horizontal'),(null as any));
    this._FormGroupDirective_1_3 = new import19.Wrapper_FormGroupDirective((null as any),(null as any));
    this._ControlContainer_1_4 = this._FormGroupDirective_1_3.context;
    this._NgControlStatusGroup_1_5 = new import20.Wrapper_NgControlStatusGroup(this._ControlContainer_1_4);
    this._text_2 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'as4-input',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_3 = new import22.View_InputComponent0(this.viewUtils,this,3,this._el_3);
    this._InputComponent_3_3 = new import22.Wrapper_InputComponent(this.parentView.injectorGet(import11.RuntimeStore,this.parentIndex));
    this._text_4 = this.renderer.createText((null as any),'\n                ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,(null as any),'input',new import3.InlineArray8(8,'class','form-control','formControlName','idFormat','name','idFormat','type','text'),(null as any));
    this._TextDirective_5_3 = new import23.Wrapper_TextDirective(new import16.ElementRef(this._el_5),this.renderer);
    this._DefaultValueAccessor_5_4 = new import24.Wrapper_DefaultValueAccessor(this.renderer,new import16.ElementRef(this._el_5));
    this._NG_VALUE_ACCESSOR_5_5 = [this._DefaultValueAccessor_5_4.context];
    this._FormControlName_5_6 = new import25.Wrapper_FormControlName(this._ControlContainer_1_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_5_5);
    this._NgControl_5_7 = this._FormControlName_5_6.context;
    this._NgControlStatus_5_8 = new import20.Wrapper_NgControlStatus(this._NgControl_5_7);
    this._text_6 = this.renderer.createText((null as any),'\n            ',(null as any));
    this.compView_3.create(this._InputComponent_3_3.context);
    this._text_7 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_1,'as4-input',new import3.InlineArray2(2,'formGroupName','certificateStore'),(null as any));
    this.compView_8 = new import22.View_InputComponent0(this.viewUtils,this,8,this._el_8);
    this._InputComponent_8_3 = new import22.Wrapper_InputComponent(this.parentView.injectorGet(import11.RuntimeStore,this.parentIndex));
    this._FormGroupName_8_4 = new import26.Wrapper_FormGroupName(this._ControlContainer_1_4,(null as any),(null as any));
    this._ControlContainer_8_5 = this._FormGroupName_8_4.context;
    this._NgControlStatusGroup_8_6 = new import20.Wrapper_NgControlStatusGroup(this._ControlContainer_8_5);
    this._text_9 = this.renderer.createText((null as any),'\n                ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,(null as any),'input',new import3.InlineArray8(8,'class','form-control','formControlName','storeName','name','certificateStoreName','type','text'),(null as any));
    this._TextDirective_10_3 = new import23.Wrapper_TextDirective(new import16.ElementRef(this._el_10),this.renderer);
    this._DefaultValueAccessor_10_4 = new import24.Wrapper_DefaultValueAccessor(this.renderer,new import16.ElementRef(this._el_10));
    this._NG_VALUE_ACCESSOR_10_5 = [this._DefaultValueAccessor_10_4.context];
    this._FormControlName_10_6 = new import25.Wrapper_FormControlName(this._ControlContainer_8_5,(null as any),(null as any),this._NG_VALUE_ACCESSOR_10_5);
    this._NgControl_10_7 = this._FormControlName_10_6.context;
    this._NgControlStatus_10_8 = new import20.Wrapper_NgControlStatus(this._NgControl_10_7);
    this._text_11 = this.renderer.createText((null as any),'\n            ',(null as any));
    this.compView_8.create(this._InputComponent_8_3.context);
    this._text_12 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_13 = import3.createRenderElement(this.renderer,this._el_1,'div',new import3.InlineArray2(2,'formGroupName','certificateStore'),(null as any));
    this._FormGroupName_13_3 = new import26.Wrapper_FormGroupName(this._ControlContainer_1_4,(null as any),(null as any));
    this._ControlContainer_13_4 = this._FormGroupName_13_3.context;
    this._NgControlStatusGroup_13_5 = new import20.Wrapper_NgControlStatusGroup(this._ControlContainer_13_4);
    this._text_14 = this.renderer.createText(this._el_13,'\n                ',(null as any));
    this._el_15 = import3.createRenderElement(this.renderer,this._el_13,'as4-input',new import3.InlineArray2(2,'formGroupName','repository'),(null as any));
    this.compView_15 = new import22.View_InputComponent0(this.viewUtils,this,15,this._el_15);
    this._InputComponent_15_3 = new import22.Wrapper_InputComponent(this.parentView.injectorGet(import11.RuntimeStore,this.parentIndex));
    this._FormGroupName_15_4 = new import26.Wrapper_FormGroupName(this._ControlContainer_13_4,(null as any),(null as any));
    this._ControlContainer_15_5 = this._FormGroupName_15_4.context;
    this._NgControlStatusGroup_15_6 = new import20.Wrapper_NgControlStatusGroup(this._ControlContainer_15_5);
    this._text_16 = this.renderer.createText((null as any),'\n                     ',(null as any));
    this._el_17 = import3.createRenderElement(this.renderer,(null as any),'select',new import3.InlineArray4(4,'class','form-control','formControlName','type'),(null as any));
    this._SelectDirective_17_3 = new import27.Wrapper_SelectDirective(new import16.ElementRef(this._el_17),this.renderer);
    this._SelectControlValueAccessor_17_4 = new import13.Wrapper_SelectControlValueAccessor(this.renderer,new import16.ElementRef(this._el_17));
    this._NG_VALUE_ACCESSOR_17_5 = [this._SelectControlValueAccessor_17_4.context];
    this._FormControlName_17_6 = new import25.Wrapper_FormControlName(this._ControlContainer_15_5,(null as any),(null as any),this._NG_VALUE_ACCESSOR_17_5);
    this._NgControl_17_7 = this._FormControlName_17_6.context;
    this._NgControlStatus_17_8 = new import20.Wrapper_NgControlStatus(this._NgControl_17_7);
    this._text_18 = this.renderer.createText(this._el_17,'\n                        ',(null as any));
    this._anchor_19 = this.renderer.createTemplateAnchor(this._el_17,(null as any));
    this._vc_19 = new import15.ViewContainer(19,17,this,this._anchor_19);
    this._TemplateRef_19_5 = new import29.TemplateRef_(this,19,this._anchor_19);
    this._NgFor_19_6 = new import28.Wrapper_NgFor(this._vc_19.vcRef,this._TemplateRef_19_5,this.parentView.injectorGet(import30.IterableDiffers,this.parentIndex),this.ref);
    this._text_20 = this.renderer.createText(this._el_17,'\n                    ',(null as any));
    this._text_21 = this.renderer.createText((null as any),'\n                ',(null as any));
    this.compView_15.create(this._InputComponent_15_3.context);
    this._text_22 = this.renderer.createText(this._el_13,'\n            ',(null as any));
    this._text_23 = this.renderer.createText(this._el_1,'\n        ',(null as any));
    this._text_24 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray4(4,'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_1));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_5,new import3.InlineArray4(4,'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_5));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_10,new import3.InlineArray4(4,'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_10));
    var disposable_3:Function = import3.subscribeToRenderElement(this,this._el_17,new import3.InlineArray4(4,'change',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_17));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._text_12,
      this._el_13,
      this._text_14,
      this._el_15,
      this._text_16,
      this._el_17,
      this._text_18,
      this._anchor_19,
      this._text_20,
      this._text_21,
      this._text_22,
      this._text_23,
      this._text_24
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import31.TextDirective) && (5 === requestNodeIndex))) { return this._TextDirective_5_3.context; }
    if (((token === import32.DefaultValueAccessor) && (5 === requestNodeIndex))) { return this._DefaultValueAccessor_5_4.context; }
    if (((token === import33.NG_VALUE_ACCESSOR) && (5 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_5_5; }
    if (((token === import34.FormControlName) && (5 === requestNodeIndex))) { return this._FormControlName_5_6.context; }
    if (((token === import35.NgControl) && (5 === requestNodeIndex))) { return this._NgControl_5_7; }
    if (((token === import36.NgControlStatus) && (5 === requestNodeIndex))) { return this._NgControlStatus_5_8.context; }
    if (((token === import21.InputComponent) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 6)))) { return this._InputComponent_3_3.context; }
    if (((token === import31.TextDirective) && (10 === requestNodeIndex))) { return this._TextDirective_10_3.context; }
    if (((token === import32.DefaultValueAccessor) && (10 === requestNodeIndex))) { return this._DefaultValueAccessor_10_4.context; }
    if (((token === import33.NG_VALUE_ACCESSOR) && (10 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_10_5; }
    if (((token === import34.FormControlName) && (10 === requestNodeIndex))) { return this._FormControlName_10_6.context; }
    if (((token === import35.NgControl) && (10 === requestNodeIndex))) { return this._NgControl_10_7; }
    if (((token === import36.NgControlStatus) && (10 === requestNodeIndex))) { return this._NgControlStatus_10_8.context; }
    if (((token === import21.InputComponent) && ((8 <= requestNodeIndex) && (requestNodeIndex <= 11)))) { return this._InputComponent_8_3.context; }
    if (((token === import37.FormGroupName) && ((8 <= requestNodeIndex) && (requestNodeIndex <= 11)))) { return this._FormGroupName_8_4.context; }
    if (((token === import38.ControlContainer) && ((8 <= requestNodeIndex) && (requestNodeIndex <= 11)))) { return this._ControlContainer_8_5; }
    if (((token === import36.NgControlStatusGroup) && ((8 <= requestNodeIndex) && (requestNodeIndex <= 11)))) { return this._NgControlStatusGroup_8_6.context; }
    if (((token === import29.TemplateRef) && (19 === requestNodeIndex))) { return this._TemplateRef_19_5; }
    if (((token === import39.NgFor) && (19 === requestNodeIndex))) { return this._NgFor_19_6.context; }
    if (((token === import40.SelectDirective) && ((17 <= requestNodeIndex) && (requestNodeIndex <= 20)))) { return this._SelectDirective_17_3.context; }
    if (((token === import17.SelectControlValueAccessor) && ((17 <= requestNodeIndex) && (requestNodeIndex <= 20)))) { return this._SelectControlValueAccessor_17_4.context; }
    if (((token === import33.NG_VALUE_ACCESSOR) && ((17 <= requestNodeIndex) && (requestNodeIndex <= 20)))) { return this._NG_VALUE_ACCESSOR_17_5; }
    if (((token === import34.FormControlName) && ((17 <= requestNodeIndex) && (requestNodeIndex <= 20)))) { return this._FormControlName_17_6.context; }
    if (((token === import35.NgControl) && ((17 <= requestNodeIndex) && (requestNodeIndex <= 20)))) { return this._NgControl_17_7; }
    if (((token === import36.NgControlStatus) && ((17 <= requestNodeIndex) && (requestNodeIndex <= 20)))) { return this._NgControlStatus_17_8.context; }
    if (((token === import21.InputComponent) && ((15 <= requestNodeIndex) && (requestNodeIndex <= 21)))) { return this._InputComponent_15_3.context; }
    if (((token === import37.FormGroupName) && ((15 <= requestNodeIndex) && (requestNodeIndex <= 21)))) { return this._FormGroupName_15_4.context; }
    if (((token === import38.ControlContainer) && ((15 <= requestNodeIndex) && (requestNodeIndex <= 21)))) { return this._ControlContainer_15_5; }
    if (((token === import36.NgControlStatusGroup) && ((15 <= requestNodeIndex) && (requestNodeIndex <= 21)))) { return this._NgControlStatusGroup_15_6.context; }
    if (((token === import37.FormGroupName) && ((13 <= requestNodeIndex) && (requestNodeIndex <= 22)))) { return this._FormGroupName_13_3.context; }
    if (((token === import38.ControlContainer) && ((13 <= requestNodeIndex) && (requestNodeIndex <= 22)))) { return this._ControlContainer_13_4; }
    if (((token === import36.NgControlStatusGroup) && ((13 <= requestNodeIndex) && (requestNodeIndex <= 22)))) { return this._NgControlStatusGroup_13_5.context; }
    if (((token === import41.FormGroupDirective) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 23)))) { return this._FormGroupDirective_1_3.context; }
    if (((token === import38.ControlContainer) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 23)))) { return this._ControlContainer_1_4; }
    if (((token === import36.NgControlStatusGroup) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 23)))) { return this._NgControlStatusGroup_1_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = this.context.form;
    this._FormGroupDirective_1_3.check_form(currVal_1_0_0,throwOnChange,false);
    this._FormGroupDirective_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    this._NgControlStatusGroup_1_5.ngDoCheck(this,this._el_1,throwOnChange);
    const currVal_3_0_0:any = 'Id format';
    this._InputComponent_3_3.check_label(currVal_3_0_0,throwOnChange,false);
    if (this._InputComponent_3_3.ngDoCheck(this,this._el_3,throwOnChange)) { this.compView_3.markAsCheckOnce(); }
    this._TextDirective_5_3.ngDoCheck(this,this._el_5,throwOnChange);
    this._DefaultValueAccessor_5_4.ngDoCheck(this,this._el_5,throwOnChange);
    const currVal_5_2_0:any = 'idFormat';
    this._FormControlName_5_6.check_name(currVal_5_2_0,throwOnChange,false);
    this._FormControlName_5_6.ngDoCheck(this,this._el_5,throwOnChange);
    this._NgControlStatus_5_8.ngDoCheck(this,this._el_5,throwOnChange);
    const currVal_8_0_0:any = 'Store name';
    this._InputComponent_8_3.check_label(currVal_8_0_0,throwOnChange,false);
    if (this._InputComponent_8_3.ngDoCheck(this,this._el_8,throwOnChange)) { this.compView_8.markAsCheckOnce(); }
    const currVal_8_1_0:any = 'certificateStore';
    this._FormGroupName_8_4.check_name(currVal_8_1_0,throwOnChange,false);
    this._FormGroupName_8_4.ngDoCheck(this,this._el_8,throwOnChange);
    this._NgControlStatusGroup_8_6.ngDoCheck(this,this._el_8,throwOnChange);
    this._TextDirective_10_3.ngDoCheck(this,this._el_10,throwOnChange);
    this._DefaultValueAccessor_10_4.ngDoCheck(this,this._el_10,throwOnChange);
    const currVal_10_2_0:any = 'storeName';
    this._FormControlName_10_6.check_name(currVal_10_2_0,throwOnChange,false);
    this._FormControlName_10_6.ngDoCheck(this,this._el_10,throwOnChange);
    this._NgControlStatus_10_8.ngDoCheck(this,this._el_10,throwOnChange);
    const currVal_13_0_0:any = 'certificateStore';
    this._FormGroupName_13_3.check_name(currVal_13_0_0,throwOnChange,false);
    this._FormGroupName_13_3.ngDoCheck(this,this._el_13,throwOnChange);
    this._NgControlStatusGroup_13_5.ngDoCheck(this,this._el_13,throwOnChange);
    const currVal_15_0_0:any = 'Repository type';
    this._InputComponent_15_3.check_label(currVal_15_0_0,throwOnChange,false);
    if (this._InputComponent_15_3.ngDoCheck(this,this._el_15,throwOnChange)) { this.compView_15.markAsCheckOnce(); }
    const currVal_15_1_0:any = 'repository';
    this._FormGroupName_15_4.check_name(currVal_15_1_0,throwOnChange,false);
    this._FormGroupName_15_4.ngDoCheck(this,this._el_15,throwOnChange);
    this._NgControlStatusGroup_15_6.ngDoCheck(this,this._el_15,throwOnChange);
    this._SelectDirective_17_3.ngDoCheck(this,this._el_17,throwOnChange);
    this._SelectControlValueAccessor_17_4.ngDoCheck(this,this._el_17,throwOnChange);
    const currVal_17_2_0:any = 'type';
    this._FormControlName_17_6.check_name(currVal_17_2_0,throwOnChange,false);
    this._FormControlName_17_6.ngDoCheck(this,this._el_17,throwOnChange);
    this._NgControlStatus_17_8.ngDoCheck(this,this._el_17,throwOnChange);
    const currVal_19_0_0:any = this.context.repositories;
    this._NgFor_19_6.check_ngForOf(currVal_19_0_0,throwOnChange,false);
    this._NgFor_19_6.ngDoCheck(this,this._anchor_19,throwOnChange);
    this._vc_19.detectChangesInNestedViews(throwOnChange);
    this._NgControlStatusGroup_1_5.checkHost(this,this,this._el_1,throwOnChange);
    this._NgControlStatus_5_8.checkHost(this,this,this._el_5,throwOnChange);
    this._NgControlStatusGroup_8_6.checkHost(this,this.compView_8,this._el_8,throwOnChange);
    this._NgControlStatus_10_8.checkHost(this,this,this._el_10,throwOnChange);
    this._NgControlStatusGroup_13_5.checkHost(this,this,this._el_13,throwOnChange);
    this._NgControlStatusGroup_15_6.checkHost(this,this.compView_15,this._el_15,throwOnChange);
    this._NgControlStatus_17_8.checkHost(this,this,this._el_17,throwOnChange);
    this.compView_3.internalDetectChanges(throwOnChange);
    this.compView_8.internalDetectChanges(throwOnChange);
    this.compView_15.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this._vc_19.destroyNestedViews();
    this.compView_3.destroy();
    this.compView_8.destroy();
    this.compView_15.destroy();
    this._FormControlName_5_6.ngOnDestroy();
    this._FormControlName_10_6.ngOnDestroy();
    this._FormGroupName_8_4.ngOnDestroy();
    this._FormControlName_17_6.ngOnDestroy();
    this._FormGroupName_15_4.ngOnDestroy();
    this._FormGroupName_13_3.ngOnDestroy();
    this._FormGroupDirective_1_3.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 3) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 3) && (ngContentIndex == 1))) {
      cb(this._text_4,ctx);
      cb(this._el_5,ctx);
      cb(this._text_6,ctx);
    }
    if (((nodeIndex == 8) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 8) && (ngContentIndex == 1))) {
      cb(this._text_9,ctx);
      cb(this._el_10,ctx);
      cb(this._text_11,ctx);
    }
    if (((nodeIndex == 15) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 15) && (ngContentIndex == 1))) {
      cb(this._text_16,ctx);
      cb(this._el_17,ctx);
      cb(this._text_21,ctx);
    }
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 19)) { return new View_BaseSettingsComponent1(this.viewUtils,this,19,this._anchor_19,this._vc_19); }
    return (null as any);
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._FormGroupDirective_1_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_5(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_5_4.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_10(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_10_4.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_17(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._SelectControlValueAccessor_17_4.handleEvent(eventName,$event) && result);
    return result;
  }
}