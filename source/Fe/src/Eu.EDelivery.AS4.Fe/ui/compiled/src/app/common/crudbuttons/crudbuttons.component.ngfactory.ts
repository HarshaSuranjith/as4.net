/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../src/app/common/crudbuttons/crudbuttons.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
export class Wrapper_CrudButtonsComponent {
  /*private*/ _eventHandler:Function;
  context:import0.CrudButtonsComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  subscription0:any;
  subscription1:any;
  subscription2:any;
  subscription3:any;
  subscription4:any;
  constructor() {
    this._changed = false;
    this.context = new import0.CrudButtonsComponent();
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
    (this.subscription2 && this.subscription2.unsubscribe());
    (this.subscription3 && this.subscription3.unsubscribe());
    (this.subscription4 && this.subscription4.unsubscribe());
  }
  check_current(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.current = currValue;
      this._expr_0 = currValue;
    }
  }
  check_form(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.form = currValue;
      this._expr_1 = currValue;
    }
  }
  check_isNewMode(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.isNewMode = currValue;
      this._expr_2 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean,emit2:boolean,emit3:boolean,emit4:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.rename.subscribe(_eventHandler.bind(view,'rename'))); }
    if (emit1) { (this.subscription1 = this.context.add.subscribe(_eventHandler.bind(view,'add'))); }
    if (emit2) { (this.subscription2 = this.context.save.subscribe(_eventHandler.bind(view,'save'))); }
    if (emit3) { (this.subscription3 = this.context.delete.subscribe(_eventHandler.bind(view,'delete'))); }
    if (emit4) { (this.subscription4 = this.context.reset.subscribe(_eventHandler.bind(view,'reset'))); }
  }
}
var renderType_CrudButtonsComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_CrudButtonsComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.CrudButtonsComponent>;
  _CrudButtonsComponent_0_3:Wrapper_CrudButtonsComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CrudButtonsComponent_Host0,renderType_CrudButtonsComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'div',new import3.InlineArray2(2,'crud-buttons',''),rootSelector,(null as any));
    this.compView_0 = new View_CrudButtonsComponent0(this.viewUtils,this,0,this._el_0);
    this._CrudButtonsComponent_0_3 = new Wrapper_CrudButtonsComponent();
    this.compView_0.create(this._CrudButtonsComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._CrudButtonsComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.CrudButtonsComponent) && (0 === requestNodeIndex))) { return this._CrudButtonsComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._CrudButtonsComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._CrudButtonsComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const CrudButtonsComponentNgFactory:import8.ComponentFactory<import0.CrudButtonsComponent> = new import8.ComponentFactory<import0.CrudButtonsComponent>('[crud-buttons]',View_CrudButtonsComponent_Host0,import0.CrudButtonsComponent);
const styles_CrudButtonsComponent:any[] = ([] as any[]);
var renderType_CrudButtonsComponent:import4.RenderComponentType = import3.createRenderComponentType('',1,import5.ViewEncapsulation.None,styles_CrudButtonsComponent,{});
export class View_CrudButtonsComponent0 extends import2.AppView<import0.CrudButtonsComponent> {
  _text_0:any;
  _el_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _el_5:any;
  _text_6:any;
  _el_7:any;
  _el_8:any;
  _text_9:any;
  _el_10:any;
  _el_11:any;
  _text_12:any;
  _el_13:any;
  _el_14:any;
  _text_15:any;
  _text_16:any;
  /*private*/ _expr_17:any;
  /*private*/ _expr_18:any;
  /*private*/ _expr_19:any;
  /*private*/ _expr_20:any;
  /*private*/ _expr_21:any;
  /*private*/ _expr_22:any;
  /*private*/ _expr_23:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CrudButtonsComponent0,renderType_CrudButtonsComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_17 = import1.UNINITIALIZED;
    this._expr_18 = import1.UNINITIALIZED;
    this._expr_19 = import1.UNINITIALIZED;
    this._expr_20 = import1.UNINITIALIZED;
    this._expr_21 = import1.UNINITIALIZED;
    this._expr_22 = import1.UNINITIALIZED;
    this._expr_23 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n            ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'button',new import3.InlineArray4(4,'class','btn btn-flat rename-button','type','button'),(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_1,'i',new import3.InlineArray2(2,'class','fa fa-edit'),(null as any));
    this._text_3 = this.renderer.createText(parentRenderNode,'\n            ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,parentRenderNode,'button',new import3.InlineArray4(4,'class','btn btn-flat add-button','type','button'),(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_4,'i',new import3.InlineArray2(2,'class','fa fa-plus'),(null as any));
    this._text_6 = this.renderer.createText(parentRenderNode,'\n            ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,parentRenderNode,'button',new import3.InlineArray4(4,'class','btn btn-flat save-button','type','button'),(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,this._el_7,'i',new import3.InlineArray2(2,'class','fa fa-save'),(null as any));
    this._text_9 = this.renderer.createText(parentRenderNode,'\n            ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,parentRenderNode,'button',new import3.InlineArray4(4,'class','btn btn-flat delete-button','type','button'),(null as any));
    this._el_11 = import3.createRenderElement(this.renderer,this._el_10,'i',new import3.InlineArray2(2,'class','fa fa-trash-o'),(null as any));
    this._text_12 = this.renderer.createText(parentRenderNode,'\n            ',(null as any));
    this._el_13 = import3.createRenderElement(this.renderer,parentRenderNode,'button',new import3.InlineArray4(4,'class','btn btn-flat reset-button','type','button'),(null as any));
    this._el_14 = import3.createRenderElement(this.renderer,this._el_13,'i',new import3.InlineArray2(2,'class','fa fa-undo'),(null as any));
    this._text_15 = this.renderer.createText(parentRenderNode,'\n            ',(null as any));
    this.projectNodes(parentRenderNode,0);
    this._text_16 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_1));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_4,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_4));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_7,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_7));
    var disposable_3:Function = import3.subscribeToRenderElement(this,this._el_10,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_10));
    var disposable_4:Function = import3.subscribeToRenderElement(this,this._el_13,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_13));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._el_11,
      this._text_12,
      this._el_13,
      this._el_14,
      this._text_15,
      this._text_16
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3,
      disposable_4
    ]
    );
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_17:boolean = !!!this.context.current;
    if (import3.checkBinding(throwOnChange,this._expr_17,currVal_17)) {
      this.renderer.setElementProperty(this._el_1,'disabled',currVal_17);
      this._expr_17 = currVal_17;
    }
    const currVal_18:any = this.context.isNewMode;
    if (import3.checkBinding(throwOnChange,this._expr_18,currVal_18)) {
      this.renderer.setElementProperty(this._el_4,'disabled',currVal_18);
      this._expr_18 = currVal_18;
    }
    const currVal_19:any = (this.context.form.dirty || this.context.isNewMode);
    if (import3.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      this.renderer.setElementClass(this._el_7,'btn-primary',currVal_19);
      this._expr_19 = currVal_19;
    }
    const currVal_20:boolean = (!this.context.form.dirty && !this.context.isNewMode);
    if (import3.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      this.renderer.setElementProperty(this._el_7,'disabled',currVal_20);
      this._expr_20 = currVal_20;
    }
    const currVal_21:boolean = !!!this.context.current;
    if (import3.checkBinding(throwOnChange,this._expr_21,currVal_21)) {
      this.renderer.setElementProperty(this._el_10,'disabled',currVal_21);
      this._expr_21 = currVal_21;
    }
    const currVal_22:any = (this.context.form.dirty || this.context.isNewMode);
    if (import3.checkBinding(throwOnChange,this._expr_22,currVal_22)) {
      this.renderer.setElementClass(this._el_13,'btn-primary',currVal_22);
      this._expr_22 = currVal_22;
    }
    const currVal_23:boolean = (!this.context.form.dirty && !this.context.isNewMode);
    if (import3.checkBinding(throwOnChange,this._expr_23,currVal_23)) {
      this.renderer.setElementProperty(this._el_13,'disabled',currVal_23);
      this._expr_23 = currVal_23;
    }
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.rename.emit()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_4(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.add.emit()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_7(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.save.emit()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_10(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.delete.emit()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_13(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.reset.emit()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}