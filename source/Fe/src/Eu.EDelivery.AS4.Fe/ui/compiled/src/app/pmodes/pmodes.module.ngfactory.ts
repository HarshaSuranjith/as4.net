/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '../../../../src/app/pmodes/pmodes.module';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/router/src/router_module';
import * as import4 from '@angular/forms/src/directives';
import * as import5 from '@angular/forms/src/form_providers';
import * as import6 from '../../../../src/app/authentication/authentication.module';
import * as import7 from 'angular2-text-mask/dist/angular2TextMask';
import * as import8 from '../../../../src/app/common/as4components.module';
import * as import9 from '@angular/common/src/localization';
import * as import10 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import11 from '../../../../src/app/common/spinner/spinner.service';
import * as import12 from '../../../../src/app/authentication/authentication.service';
import * as import13 from '@angular/forms/src/form_builder';
import * as import14 from '../../../../src/app/common/common.guards';
import * as import15 from '../../../../src/app/common/modal/modal.service';
import * as import16 from '../../../../src/app/common/dialog.service';
import * as import17 from '../../../../src/app/pmodes/pmode.store';
import * as import18 from '../../../../src/app/pmodes/pmode.service';
import * as import19 from '@angular/core/src/di/injector';
import * as import20 from '../authentication/login/login.component.ngfactory';
import * as import21 from '../common/wrapper.component.ngfactory';
import * as import22 from './receivingpmode/receivingpmode.component.ngfactory';
import * as import23 from './sendingpmode/sendingpmode.component.ngfactory';
import * as import24 from '@angular/core/src/i18n/tokens';
import * as import25 from '../../../../src/app/authentication/login/login.component';
import * as import26 from '../../../../src/app/common/wrapper.component';
import * as import27 from '../../../../src/app/pmodes/receivingpmode/receivingpmode.component';
import * as import28 from '../../../../src/app/pmodes/sendingpmode/sendingpmode.component';
import * as import29 from '@angular/http/src/backends/xhr_backend';
import * as import30 from '@angular/http/src/base_request_options';
import * as import31 from 'angular2-jwt/angular2-jwt';
import * as import32 from '@angular/router/src/router';
import * as import33 from '../../../../src/app/common/error.handler';
import * as import34 from '@angular/router/src/router_config_loader';
import * as import35 from '@angular/http/src/http';
import * as import36 from '@angular/core/src/error_handler';
class PmodesModuleInjector extends import0.NgModuleInjector<import1.PmodesModule> {
  _CommonModule_0:import2.CommonModule;
  _RouterModule_1:import3.RouterModule;
  _InternalFormsSharedModule_2:import4.InternalFormsSharedModule;
  _FormsModule_3:import5.FormsModule;
  _AuthenticationModule_4:import6.AuthenticationModule;
  _ReactiveFormsModule_5:import5.ReactiveFormsModule;
  _TextMaskModule_6:import7.TextMaskModule;
  _As4ComponentsModule_7:import8.As4ComponentsModule;
  _PmodesModule_8:import1.PmodesModule;
  __NgLocalization_9:import9.NgLocaleLocalization;
  __RadioControlRegistry_10:import10.RadioControlRegistry;
  __ROUTES_11:any[];
  __SpinnerService_12:import11.SpinnerService;
  __Http_13:any;
  __AuthenticationStore_14:import12.AuthenticationStore;
  __AuthenticationService_15:import12.AuthenticationService;
  __FormBuilder_16:import13.FormBuilder;
  __MustBeAuthorizedGuard_17:import14.MustBeAuthorizedGuard;
  __ModalService_18:import15.ModalService;
  __DialogService_19:import16.DialogService;
  __ErrorHandler_20:any;
  __AuthHttp_21:any;
  __PmodeStore_22:import17.PmodeStore;
  __SendingPmodeService_23:import18.SendingPmodeService;
  __ReceivingPmodeService_24:import18.ReceivingPmodeService;
  constructor(parent:import19.Injector) {
    super(parent,[
      import20.LoginComponentNgFactory,
      import21.WrapperComponentNgFactory,
      import22.ReceivingPmodeComponentNgFactory,
      import23.SendingPmodeComponentNgFactory
    ]
    ,([] as any[]));
  }
  get _NgLocalization_9():import9.NgLocaleLocalization {
    if ((this.__NgLocalization_9 == null)) { (this.__NgLocalization_9 = new import9.NgLocaleLocalization(this.parent.get(import24.LOCALE_ID))); }
    return this.__NgLocalization_9;
  }
  get _RadioControlRegistry_10():import10.RadioControlRegistry {
    if ((this.__RadioControlRegistry_10 == null)) { (this.__RadioControlRegistry_10 = new import10.RadioControlRegistry()); }
    return this.__RadioControlRegistry_10;
  }
  get _ROUTES_11():any[] {
    if ((this.__ROUTES_11 == null)) { (this.__ROUTES_11 = [
        [{
          path: 'login',
          component: import25.LoginComponent
        }
      ],
        [{
          path: '',
          component: import26.WrapperComponent,
            children: [{
              path: 'pmodes',
              children: [
                {
                  path: '',
                  pathMatch: 'full',
                  redirectTo: 'receiving'
                }
                ,
                {
                  path: 'receiving',
                  component: import27.ReceivingPmodeComponent,
                  data: {
                    title: 'Receiving',
                    mode: 'receiving'
                  }

                }
                ,
                {
                  path: 'sending',
                  component: import28.SendingPmodeComponent,
                  data: {
                    title: 'Sending',
                    mode: 'sending'
                  }

                }

              ]
              ,
              data: {title: 'Pmodes'},
              canActivate: [import14.MustBeAuthorizedGuard]
            }
          ]
        }
      ]
    ]
    ); }
    return this.__ROUTES_11;
  }
  get _SpinnerService_12():import11.SpinnerService {
    if ((this.__SpinnerService_12 == null)) { (this.__SpinnerService_12 = new import11.SpinnerService()); }
    return this.__SpinnerService_12;
  }
  get _Http_13():any {
    if ((this.__Http_13 == null)) { (this.__Http_13 = import11.spinnerHttpServiceFactory(this.parent.get(import29.XHRBackend),this.parent.get(import30.RequestOptions),this._SpinnerService_12)); }
    return this.__Http_13;
  }
  get _AuthenticationStore_14():import12.AuthenticationStore {
    if ((this.__AuthenticationStore_14 == null)) { (this.__AuthenticationStore_14 = new import12.AuthenticationStore()); }
    return this.__AuthenticationStore_14;
  }
  get _AuthenticationService_15():import12.AuthenticationService {
    if ((this.__AuthenticationService_15 == null)) { (this.__AuthenticationService_15 = new import12.AuthenticationService(this._Http_13,this._AuthenticationStore_14,this.parent.get(import31.JwtHelper),this.parent.get(import32.Router))); }
    return this.__AuthenticationService_15;
  }
  get _FormBuilder_16():import13.FormBuilder {
    if ((this.__FormBuilder_16 == null)) { (this.__FormBuilder_16 = new import13.FormBuilder()); }
    return this.__FormBuilder_16;
  }
  get _MustBeAuthorizedGuard_17():import14.MustBeAuthorizedGuard {
    if ((this.__MustBeAuthorizedGuard_17 == null)) { (this.__MustBeAuthorizedGuard_17 = new import14.MustBeAuthorizedGuard(this.parent.get(import32.Router))); }
    return this.__MustBeAuthorizedGuard_17;
  }
  get _ModalService_18():import15.ModalService {
    if ((this.__ModalService_18 == null)) { (this.__ModalService_18 = new import15.ModalService()); }
    return this.__ModalService_18;
  }
  get _DialogService_19():import16.DialogService {
    if ((this.__DialogService_19 == null)) { (this.__DialogService_19 = new import16.DialogService(this._ModalService_18)); }
    return this.__DialogService_19;
  }
  get _ErrorHandler_20():any {
    if ((this.__ErrorHandler_20 == null)) { (this.__ErrorHandler_20 = import33.errorHandlerFactory(this._DialogService_19,this._SpinnerService_12)); }
    return this.__ErrorHandler_20;
  }
  get _AuthHttp_21():any {
    if ((this.__AuthHttp_21 == null)) { (this.__AuthHttp_21 = import8.authHttpServiceFactory(this._Http_13,this.parent.get(import30.RequestOptions))); }
    return this.__AuthHttp_21;
  }
  get _PmodeStore_22():import17.PmodeStore {
    if ((this.__PmodeStore_22 == null)) { (this.__PmodeStore_22 = new import17.PmodeStore()); }
    return this.__PmodeStore_22;
  }
  get _SendingPmodeService_23():import18.SendingPmodeService {
    if ((this.__SendingPmodeService_23 == null)) { (this.__SendingPmodeService_23 = new import18.SendingPmodeService(this._AuthHttp_21,this._PmodeStore_22,this._FormBuilder_16)); }
    return this.__SendingPmodeService_23;
  }
  get _ReceivingPmodeService_24():import18.ReceivingPmodeService {
    if ((this.__ReceivingPmodeService_24 == null)) { (this.__ReceivingPmodeService_24 = new import18.ReceivingPmodeService(this._AuthHttp_21,this._PmodeStore_22,this._FormBuilder_16)); }
    return this.__ReceivingPmodeService_24;
  }
  createInternal():import1.PmodesModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._RouterModule_1 = new import3.RouterModule(this.parent.get(import3.ROUTER_FORROOT_GUARD,(null as any)));
    this._InternalFormsSharedModule_2 = new import4.InternalFormsSharedModule();
    this._FormsModule_3 = new import5.FormsModule();
    this._AuthenticationModule_4 = new import6.AuthenticationModule();
    this._ReactiveFormsModule_5 = new import5.ReactiveFormsModule();
    this._TextMaskModule_6 = new import7.TextMaskModule();
    this._As4ComponentsModule_7 = new import8.As4ComponentsModule();
    this._PmodesModule_8 = new import1.PmodesModule();
    return this._PmodesModule_8;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.RouterModule)) { return this._RouterModule_1; }
    if ((token === import4.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_2; }
    if ((token === import5.FormsModule)) { return this._FormsModule_3; }
    if ((token === import6.AuthenticationModule)) { return this._AuthenticationModule_4; }
    if ((token === import5.ReactiveFormsModule)) { return this._ReactiveFormsModule_5; }
    if ((token === import7.TextMaskModule)) { return this._TextMaskModule_6; }
    if ((token === import8.As4ComponentsModule)) { return this._As4ComponentsModule_7; }
    if ((token === import1.PmodesModule)) { return this._PmodesModule_8; }
    if ((token === import9.NgLocalization)) { return this._NgLocalization_9; }
    if ((token === import10.RadioControlRegistry)) { return this._RadioControlRegistry_10; }
    if ((token === import34.ROUTES)) { return this._ROUTES_11; }
    if ((token === import11.SpinnerService)) { return this._SpinnerService_12; }
    if ((token === import35.Http)) { return this._Http_13; }
    if ((token === import12.AuthenticationStore)) { return this._AuthenticationStore_14; }
    if ((token === import12.AuthenticationService)) { return this._AuthenticationService_15; }
    if ((token === import13.FormBuilder)) { return this._FormBuilder_16; }
    if ((token === import14.MustBeAuthorizedGuard)) { return this._MustBeAuthorizedGuard_17; }
    if ((token === import15.ModalService)) { return this._ModalService_18; }
    if ((token === import16.DialogService)) { return this._DialogService_19; }
    if ((token === import36.ErrorHandler)) { return this._ErrorHandler_20; }
    if ((token === import31.AuthHttp)) { return this._AuthHttp_21; }
    if ((token === import17.PmodeStore)) { return this._PmodeStore_22; }
    if ((token === import18.SendingPmodeService)) { return this._SendingPmodeService_23; }
    if ((token === import18.ReceivingPmodeService)) { return this._ReceivingPmodeService_24; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const PmodesModuleNgFactory:import0.NgModuleFactory<import1.PmodesModule> = new import0.NgModuleFactory(PmodesModuleInjector,import1.PmodesModule);