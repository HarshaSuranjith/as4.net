/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../src/app/pmodes/crud/crud.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../../../../src/app/common/dialog.service';
import * as import9 from '../../../../../src/app/common/modal/modal.service';
import * as import10 from '../../../../node_modules/@angular/forms/src/directives/select_control_value_accessor.ngfactory';
import * as import11 from '../../../../node_modules/@angular/forms/src/directives/select_multiple_control_value_accessor.ngfactory';
import * as import12 from '@angular/core/src/linker/view_container';
import * as import13 from '@angular/core/src/change_detection/change_detection_util';
import * as import14 from '@angular/core/src/linker/element_ref';
import * as import15 from '@angular/forms/src/directives/select_control_value_accessor';
import * as import16 from '@angular/forms/src/directives/select_multiple_control_value_accessor';
import * as import17 from '../../../../../src/app/common/modal/modal.component';
import * as import18 from '../../common/modal/modal.component.ngfactory';
import * as import19 from '../../../../node_modules/@angular/forms/src/directives/ng_form.ngfactory';
import * as import20 from '../../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import21 from '../../common/text.directive.ngfactory';
import * as import22 from '../../common/selectdirective.ngfactory';
import * as import23 from '../../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import24 from '../../../../../src/app/common/input/input.component';
import * as import25 from '../../common/input/input.component.ngfactory';
import * as import26 from '../../../../../src/app/common/columns/columns.component';
import * as import27 from '../../common/columns/columns.component.ngfactory';
import * as import28 from '../../../../../src/app/common/crudbuttons/crudbuttons.component';
import * as import29 from '../../common/crudbuttons/crudbuttons.component.ngfactory';
import * as import30 from '@angular/core/src/linker/template_ref';
import * as import31 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import32 from '../../../../../src/app/settings/runtime.store';
import * as import33 from '../../../../../src/app/common/text.directive';
import * as import34 from '@angular/common/src/directives/ng_for';
import * as import35 from '../../../../../src/app/common/selectdirective';
import * as import36 from '@angular/forms/src/directives/ng_form';
import * as import37 from '@angular/forms/src/directives/control_container';
import * as import38 from '@angular/forms/src/directives/ng_control_status';
export class Wrapper_CrudComponent {
  /*private*/ _eventHandler:Function;
  context:import0.CrudComponent;
  /*private*/ _changed:boolean;
  constructor(p0:any,p1:any,p2:any) {
    this._changed = false;
    this.context = new import0.CrudComponent(p0,p1,p2);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_CrudComponent_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_CrudComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.CrudComponent>;
  _CrudComponent_0_3:Wrapper_CrudComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CrudComponent_Host0,renderType_CrudComponent_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'as4-pmode',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_CrudComponent0(this.viewUtils,this,0,this._el_0);
    this._CrudComponent_0_3 = new Wrapper_CrudComponent(this.injectorGet(import8.DialogService,this.parentIndex),this.injectorGet(import0.PMODECRUD_SERVICE,this.parentIndex),this.injectorGet(import9.ModalService,this.parentIndex));
    this.compView_0.create(this._CrudComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._CrudComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.CrudComponent) && (0 === requestNodeIndex))) { return this._CrudComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._CrudComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._CrudComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const CrudComponentNgFactory:import7.ComponentFactory<import0.CrudComponent> = new import7.ComponentFactory<import0.CrudComponent>('as4-pmode',View_CrudComponent_Host0,import0.CrudComponent);
const styles_CrudComponent:any[] = ([] as any[]);
class View_CrudComponent1 extends import1.AppView<any> {
  _el_0:any;
  _NgSelectOption_0_3:import10.Wrapper_NgSelectOption;
  _NgSelectMultipleOption_0_4:import11.Wrapper_NgSelectMultipleOption;
  _text_1:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_CrudComponent1,renderType_CrudComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_4 = import13.UNINITIALIZED;
    this._expr_5 = import13.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'option',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._NgSelectOption_0_3 = new import10.Wrapper_NgSelectOption(new import14.ElementRef(this._el_0),this.renderer,(null as any));
    this._NgSelectMultipleOption_0_4 = new import11.Wrapper_NgSelectMultipleOption(new import14.ElementRef(this._el_0),this.renderer,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.NgSelectOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgSelectOption_0_3.context; }
    if (((token === import16.NgSelectMultipleOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgSelectMultipleOption_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.context.$implicit;
    this._NgSelectOption_0_3.check_ngValue(currVal_0_0_0,throwOnChange,false);
    this._NgSelectOption_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_1_0:any = this.context.$implicit;
    this._NgSelectMultipleOption_0_4.check_ngValue(currVal_0_1_0,throwOnChange,false);
    this._NgSelectMultipleOption_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_4:any = (this.parentView.context.actionType === this.context.$implicit);
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementProperty(this._el_0,'selected',currVal_4);
      this._expr_4 = currVal_4;
    }
    const currVal_5:any = import3.inlineInterpolate(1,'',this.context.$implicit,'');
    if (import3.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setText(this._text_1,currVal_5);
      this._expr_5 = currVal_5;
    }
  }
  destroyInternal():void {
    this._NgSelectOption_0_3.ngOnDestroy();
    this._NgSelectMultipleOption_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_CrudComponent2 extends import1.AppView<any> {
  _el_0:any;
  _NgSelectOption_0_3:import10.Wrapper_NgSelectOption;
  _NgSelectMultipleOption_0_4:import11.Wrapper_NgSelectMultipleOption;
  _text_1:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_CrudComponent2,renderType_CrudComponent,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_4 = import13.UNINITIALIZED;
    this._expr_5 = import13.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'option',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._NgSelectOption_0_3 = new import10.Wrapper_NgSelectOption(new import14.ElementRef(this._el_0),this.renderer,(null as any));
    this._NgSelectMultipleOption_0_4 = new import11.Wrapper_NgSelectMultipleOption(new import14.ElementRef(this._el_0),this.renderer,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.NgSelectOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgSelectOption_0_3.context; }
    if (((token === import16.NgSelectMultipleOption) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgSelectMultipleOption_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._NgSelectOption_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgSelectMultipleOption_0_4.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_4:any = (this.context.$implicit === (this.parentView.context.currentPmode && this.parentView.context.currentPmode.name));
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementProperty(this._el_0,'selected',currVal_4);
      this._expr_4 = currVal_4;
    }
    const currVal_5:any = import3.inlineInterpolate(1,'',((((this.parentView.context.currentPmode && (this.parentView.context.currentPmode.name === this.context.$implicit)) && !!this.parentView.context.form) && !!this.parentView.context.form.controls)? this.parentView.context.form.controls.name.value: this.context.$implicit),'');
    if (import3.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setText(this._text_1,currVal_5);
      this._expr_5 = currVal_5;
    }
  }
  destroyInternal():void {
    this._NgSelectOption_0_3.ngOnDestroy();
    this._NgSelectMultipleOption_0_4.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
var renderType_CrudComponent:import2.RenderComponentType = import3.createRenderComponentType('',1,import4.ViewEncapsulation.None,styles_CrudComponent,{});
export class View_CrudComponent0 extends import1.AppView<import0.CrudComponent> {
  _text_0:any;
  _el_1:any;
  compView_1:import1.AppView<import17.ModalComponent>;
  _ModalComponent_1_3:import18.Wrapper_ModalComponent;
  _text_2:any;
  _el_3:any;
  _NgForm_3_3:import19.Wrapper_NgForm;
  _ControlContainer_3_4:any;
  _NgControlStatusGroup_3_5:import20.Wrapper_NgControlStatusGroup;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _text_9:any;
  _el_10:any;
  _text_11:any;
  _el_12:any;
  _TextDirective_12_3:import21.Wrapper_TextDirective;
  _text_13:any;
  _text_14:any;
  _text_15:any;
  _el_16:any;
  _text_17:any;
  _el_18:any;
  _text_19:any;
  _text_20:any;
  _el_21:any;
  _text_22:any;
  _el_23:any;
  _SelectDirective_23_3:import22.Wrapper_SelectDirective;
  _text_24:any;
  _anchor_25:any;
  /*private*/ _vc_25:import12.ViewContainer;
  _TemplateRef_25_5:any;
  _NgFor_25_6:import23.Wrapper_NgFor;
  _text_26:any;
  _el_27:any;
  _NgSelectOption_27_3:import10.Wrapper_NgSelectOption;
  _NgSelectMultipleOption_27_4:import11.Wrapper_NgSelectMultipleOption;
  _text_28:any;
  _text_29:any;
  _text_30:any;
  _text_31:any;
  _text_32:any;
  _text_33:any;
  _text_34:any;
  _el_35:any;
  compView_35:import1.AppView<import24.InputComponent>;
  _InputComponent_35_3:import25.Wrapper_InputComponent;
  _text_36:any;
  _el_37:any;
  compView_37:import1.AppView<import26.ColumnsComponent>;
  _ColumnsComponent_37_3:import27.Wrapper_ColumnsComponent;
  _text_38:any;
  _el_39:any;
  _SelectDirective_39_3:import22.Wrapper_SelectDirective;
  _text_40:any;
  _el_41:any;
  _NgSelectOption_41_3:import10.Wrapper_NgSelectOption;
  _NgSelectMultipleOption_41_4:import11.Wrapper_NgSelectMultipleOption;
  _text_42:any;
  _text_43:any;
  _anchor_44:any;
  /*private*/ _vc_44:import12.ViewContainer;
  _TemplateRef_44_5:any;
  _NgFor_44_6:import23.Wrapper_NgFor;
  _text_45:any;
  _text_46:any;
  _el_47:any;
  compView_47:import1.AppView<import28.CrudButtonsComponent>;
  _CrudButtonsComponent_47_3:import29.Wrapper_CrudButtonsComponent;
  _text_48:any;
  _text_49:any;
  _text_50:any;
  _text_51:any;
  /*private*/ _expr_76:any;
  /*private*/ _expr_77:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CrudComponent0,renderType_CrudComponent,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
    this._expr_76 = import13.UNINITIALIZED;
    this._expr_77 = import13.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'as4-modal',new import3.InlineArray4(4,'name','new-pmode','title','Create a new pmode'),(null as any));
    this.compView_1 = new import18.View_ModalComponent0(this.viewUtils,this,1,this._el_1);
    this._ModalComponent_1_3 = new import18.Wrapper_ModalComponent(this.parentView.injectorGet(import9.ModalService,this.parentIndex),new import14.ElementRef(this._el_1));
    this._text_2 = this.renderer.createText((null as any),'\n            ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,(null as any),'form',new import3.InlineArray2(2,'class','form-horizontal'),(null as any));
    this._NgForm_3_3 = new import19.Wrapper_NgForm((null as any),(null as any));
    this._ControlContainer_3_4 = this._NgForm_3_3.context;
    this._NgControlStatusGroup_3_5 = new import20.Wrapper_NgControlStatusGroup(this._ControlContainer_3_4);
    this._text_4 = this.renderer.createText(this._el_3,'\n                ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,this._el_3,'div',new import3.InlineArray2(2,'class','form-group'),(null as any));
    this._text_6 = this.renderer.createText(this._el_5,'\n                    ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_5,'label',new import3.InlineArray2(2,'class','col-xs-2'),(null as any));
    this._text_8 = this.renderer.createText(this._el_7,'New name',(null as any));
    this._text_9 = this.renderer.createText(this._el_5,'\n                    ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_5,'div',new import3.InlineArray2(2,'class','col-xs-10'),(null as any));
    this._text_11 = this.renderer.createText(this._el_10,'\n                        ',(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,this._el_10,'input',new import3.InlineArray4(4,'class','form-control','type','text'),(null as any));
    this._TextDirective_12_3 = new import21.Wrapper_TextDirective(new import14.ElementRef(this._el_12),this.renderer);
    this._text_13 = this.renderer.createText(this._el_10,'\n                    ',(null as any));
    this._text_14 = this.renderer.createText(this._el_5,'\n                ',(null as any));
    this._text_15 = this.renderer.createText(this._el_3,'\n                ',(null as any));
    this._el_16 = import3.createRenderElement(this.renderer,this._el_3,'div',new import3.InlineArray2(2,'class','form-group'),(null as any));
    this._text_17 = this.renderer.createText(this._el_16,'\n                    ',(null as any));
    this._el_18 = import3.createRenderElement(this.renderer,this._el_16,'label',new import3.InlineArray2(2,'class','col-xs-2'),(null as any));
    this._text_19 = this.renderer.createText(this._el_18,'Use',(null as any));
    this._text_20 = this.renderer.createText(this._el_16,'\n                    ',(null as any));
    this._el_21 = import3.createRenderElement(this.renderer,this._el_16,'div',new import3.InlineArray2(2,'class','col-xs-10'),(null as any));
    this._text_22 = this.renderer.createText(this._el_21,'\n                        ',(null as any));
    this._el_23 = import3.createRenderElement(this.renderer,this._el_21,'select',new import3.InlineArray2(2,'class','form-control'),(null as any));
    this._SelectDirective_23_3 = new import22.Wrapper_SelectDirective(new import14.ElementRef(this._el_23),this.renderer);
    this._text_24 = this.renderer.createText(this._el_23,'\n                            ',(null as any));
    this._anchor_25 = this.renderer.createTemplateAnchor(this._el_23,(null as any));
    this._vc_25 = new import12.ViewContainer(25,23,this,this._anchor_25);
    this._TemplateRef_25_5 = new import30.TemplateRef_(this,25,this._anchor_25);
    this._NgFor_25_6 = new import23.Wrapper_NgFor(this._vc_25.vcRef,this._TemplateRef_25_5,this.parentView.injectorGet(import31.IterableDiffers,this.parentIndex),this.ref);
    this._text_26 = this.renderer.createText(this._el_23,'\n                            ',(null as any));
    this._el_27 = import3.createRenderElement(this.renderer,this._el_23,'option',new import3.InlineArray2(2,'value','-1'),(null as any));
    this._NgSelectOption_27_3 = new import10.Wrapper_NgSelectOption(new import14.ElementRef(this._el_27),this.renderer,(null as any));
    this._NgSelectMultipleOption_27_4 = new import11.Wrapper_NgSelectMultipleOption(new import14.ElementRef(this._el_27),this.renderer,(null as any));
    this._text_28 = this.renderer.createText(this._el_27,'Custom',(null as any));
    this._text_29 = this.renderer.createText(this._el_23,'\n                        ',(null as any));
    this._text_30 = this.renderer.createText(this._el_21,'\n                    ',(null as any));
    this._text_31 = this.renderer.createText(this._el_16,'\n                ',(null as any));
    this._text_32 = this.renderer.createText(this._el_3,'\n            ',(null as any));
    this._text_33 = this.renderer.createText((null as any),'\n        ',(null as any));
    this.compView_1.create(this._ModalComponent_1_3.context);
    this._text_34 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._el_35 = import3.createRenderElement(this.renderer,parentRenderNode,'as4-input',new import3.InlineArray4(4,'label','Name','runtimeTooltip','receivingprocessingmode.id'),(null as any));
    this.compView_35 = new import25.View_InputComponent0(this.viewUtils,this,35,this._el_35);
    this._InputComponent_35_3 = new import25.Wrapper_InputComponent(this.parentView.injectorGet(import32.RuntimeStore,this.parentIndex));
    this._text_36 = this.renderer.createText((null as any),'\n            ',(null as any));
    this._el_37 = import3.createRenderElement(this.renderer,(null as any),'as4-columns',new import3.InlineArray2(2,'noMargin','true'),(null as any));
    this.compView_37 = new import27.View_ColumnsComponent0(this.viewUtils,this,37,this._el_37);
    this._ColumnsComponent_37_3 = new import27.Wrapper_ColumnsComponent(new import14.ElementRef(this._el_37),this.renderer);
    this._text_38 = this.renderer.createText((null as any),'\n                ',(null as any));
    this._el_39 = import3.createRenderElement(this.renderer,(null as any),'select',new import3.InlineArray2(2,'class','FormArray-control select-pmode'),(null as any));
    this._SelectDirective_39_3 = new import22.Wrapper_SelectDirective(new import14.ElementRef(this._el_39),this.renderer);
    this._text_40 = this.renderer.createText(this._el_39,'\n                    ',(null as any));
    this._el_41 = import3.createRenderElement(this.renderer,this._el_39,'option',new import3.InlineArray2(2,'value','undefined'),(null as any));
    this._NgSelectOption_41_3 = new import10.Wrapper_NgSelectOption(new import14.ElementRef(this._el_41),this.renderer,(null as any));
    this._NgSelectMultipleOption_41_4 = new import11.Wrapper_NgSelectMultipleOption(new import14.ElementRef(this._el_41),this.renderer,(null as any));
    this._text_42 = this.renderer.createText(this._el_41,'Select an option',(null as any));
    this._text_43 = this.renderer.createText(this._el_39,'\n                    ',(null as any));
    this._anchor_44 = this.renderer.createTemplateAnchor(this._el_39,(null as any));
    this._vc_44 = new import12.ViewContainer(44,39,this,this._anchor_44);
    this._TemplateRef_44_5 = new import30.TemplateRef_(this,44,this._anchor_44);
    this._NgFor_44_6 = new import23.Wrapper_NgFor(this._vc_44.vcRef,this._TemplateRef_44_5,this.parentView.injectorGet(import31.IterableDiffers,this.parentIndex),this.ref);
    this._text_45 = this.renderer.createText(this._el_39,'\n                ',(null as any));
    this._text_46 = this.renderer.createText((null as any),'\n                ',(null as any));
    this._el_47 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'crud-buttons',''),(null as any));
    this.compView_47 = new import29.View_CrudButtonsComponent0(this.viewUtils,this,47,this._el_47);
    this._CrudButtonsComponent_47_3 = new import29.Wrapper_CrudButtonsComponent();
    this.compView_47.create(this._CrudButtonsComponent_47_3.context);
    this._text_48 = this.renderer.createText((null as any),'\n            ',(null as any));
    this.compView_37.create(this._ColumnsComponent_37_3.context);
    this._text_49 = this.renderer.createText((null as any),'\n        ',(null as any));
    this.compView_35.create(this._InputComponent_35_3.context);
    this._text_50 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this.projectNodes(parentRenderNode,0);
    this._text_51 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray4(4,'shown',(null as any),'keydown','document'),this.eventHandler(this.handleEvent_1));
    this._ModalComponent_1_3.subscribe(this,this.eventHandler(this.handleEvent_1),true);
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_3,new import3.InlineArray4(4,'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_3));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_12,new import3.InlineArray2(2,'keyup',(null as any)),this.eventHandler(this.handleEvent_12));
    var disposable_3:Function = import3.subscribeToRenderElement(this,this._el_23,new import3.InlineArray2(2,'change',(null as any)),this.eventHandler(this.handleEvent_23));
    var disposable_4:Function = import3.subscribeToRenderElement(this,this._el_39,new import3.InlineArray2(2,'change',(null as any)),this.eventHandler(this.handleEvent_39));
    var disposable_5:Function = import3.subscribeToRenderElement(this,this._el_47,new import3.InlineArray16(10,'add',(null as any),'rename',(null as any),'reset',(null as any),'delete',(null as any),'save',(null as any)),this.eventHandler(this.handleEvent_47));
    this._CrudButtonsComponent_47_3.subscribe(this,this.eventHandler(this.handleEvent_47),true,true,true,true,true);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._text_14,
      this._text_15,
      this._el_16,
      this._text_17,
      this._el_18,
      this._text_19,
      this._text_20,
      this._el_21,
      this._text_22,
      this._el_23,
      this._text_24,
      this._anchor_25,
      this._text_26,
      this._el_27,
      this._text_28,
      this._text_29,
      this._text_30,
      this._text_31,
      this._text_32,
      this._text_33,
      this._text_34,
      this._el_35,
      this._text_36,
      this._el_37,
      this._text_38,
      this._el_39,
      this._text_40,
      this._el_41,
      this._text_42,
      this._text_43,
      this._anchor_44,
      this._text_45,
      this._text_46,
      this._el_47,
      this._text_48,
      this._text_49,
      this._text_50,
      this._text_51
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3,
      disposable_4,
      disposable_5
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import33.TextDirective) && (12 === requestNodeIndex))) { return this._TextDirective_12_3.context; }
    if (((token === import30.TemplateRef) && (25 === requestNodeIndex))) { return this._TemplateRef_25_5; }
    if (((token === import34.NgFor) && (25 === requestNodeIndex))) { return this._NgFor_25_6.context; }
    if (((token === import15.NgSelectOption) && ((27 <= requestNodeIndex) && (requestNodeIndex <= 28)))) { return this._NgSelectOption_27_3.context; }
    if (((token === import16.NgSelectMultipleOption) && ((27 <= requestNodeIndex) && (requestNodeIndex <= 28)))) { return this._NgSelectMultipleOption_27_4.context; }
    if (((token === import35.SelectDirective) && ((23 <= requestNodeIndex) && (requestNodeIndex <= 29)))) { return this._SelectDirective_23_3.context; }
    if (((token === import36.NgForm) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 32)))) { return this._NgForm_3_3.context; }
    if (((token === import37.ControlContainer) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 32)))) { return this._ControlContainer_3_4; }
    if (((token === import38.NgControlStatusGroup) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 32)))) { return this._NgControlStatusGroup_3_5.context; }
    if (((token === import17.ModalComponent) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 33)))) { return this._ModalComponent_1_3.context; }
    if (((token === import15.NgSelectOption) && ((41 <= requestNodeIndex) && (requestNodeIndex <= 42)))) { return this._NgSelectOption_41_3.context; }
    if (((token === import16.NgSelectMultipleOption) && ((41 <= requestNodeIndex) && (requestNodeIndex <= 42)))) { return this._NgSelectMultipleOption_41_4.context; }
    if (((token === import30.TemplateRef) && (44 === requestNodeIndex))) { return this._TemplateRef_44_5; }
    if (((token === import34.NgFor) && (44 === requestNodeIndex))) { return this._NgFor_44_6.context; }
    if (((token === import35.SelectDirective) && ((39 <= requestNodeIndex) && (requestNodeIndex <= 45)))) { return this._SelectDirective_39_3.context; }
    if (((token === import28.CrudButtonsComponent) && (47 === requestNodeIndex))) { return this._CrudButtonsComponent_47_3.context; }
    if (((token === import26.ColumnsComponent) && ((37 <= requestNodeIndex) && (requestNodeIndex <= 48)))) { return this._ColumnsComponent_37_3.context; }
    if (((token === import24.InputComponent) && ((35 <= requestNodeIndex) && (requestNodeIndex <= 49)))) { return this._InputComponent_35_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = 'new-pmode';
    this._ModalComponent_1_3.check_name(currVal_1_0_0,throwOnChange,false);
    const currVal_1_0_1:any = 'Create a new pmode';
    this._ModalComponent_1_3.check_title(currVal_1_0_1,throwOnChange,false);
    this._ModalComponent_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    this._NgForm_3_3.ngDoCheck(this,this._el_3,throwOnChange);
    this._NgControlStatusGroup_3_5.ngDoCheck(this,this._el_3,throwOnChange);
    this._TextDirective_12_3.ngDoCheck(this,this._el_12,throwOnChange);
    this._SelectDirective_23_3.ngDoCheck(this,this._el_23,throwOnChange);
    const currVal_25_0_0:any = this.context.pmodes;
    this._NgFor_25_6.check_ngForOf(currVal_25_0_0,throwOnChange,false);
    this._NgFor_25_6.ngDoCheck(this,this._anchor_25,throwOnChange);
    const currVal_27_0_0:any = '-1';
    this._NgSelectOption_27_3.check_value(currVal_27_0_0,throwOnChange,false);
    this._NgSelectOption_27_3.ngDoCheck(this,this._el_27,throwOnChange);
    const currVal_27_1_0:any = '-1';
    this._NgSelectMultipleOption_27_4.check_value(currVal_27_1_0,throwOnChange,false);
    this._NgSelectMultipleOption_27_4.ngDoCheck(this,this._el_27,throwOnChange);
    const currVal_35_0_0:any = 'Name';
    this._InputComponent_35_3.check_label(currVal_35_0_0,throwOnChange,false);
    const currVal_35_0_1:any = 'receivingprocessingmode.id';
    this._InputComponent_35_3.check_runtimeTooltip(currVal_35_0_1,throwOnChange,false);
    if (this._InputComponent_35_3.ngDoCheck(this,this._el_35,throwOnChange)) { this.compView_35.markAsCheckOnce(); }
    const currVal_37_0_0:any = 'true';
    this._ColumnsComponent_37_3.check_noMargin(currVal_37_0_0,throwOnChange,false);
    if (this._ColumnsComponent_37_3.ngDoCheck(this,this._el_37,throwOnChange)) { this.compView_37.markAsCheckOnce(); }
    this._SelectDirective_39_3.ngDoCheck(this,this._el_39,throwOnChange);
    const currVal_41_0_0:any = 'undefined';
    this._NgSelectOption_41_3.check_value(currVal_41_0_0,throwOnChange,false);
    this._NgSelectOption_41_3.ngDoCheck(this,this._el_41,throwOnChange);
    const currVal_41_1_0:any = 'undefined';
    this._NgSelectMultipleOption_41_4.check_value(currVal_41_1_0,throwOnChange,false);
    this._NgSelectMultipleOption_41_4.ngDoCheck(this,this._el_41,throwOnChange);
    const currVal_44_0_0:any = this.context.pmodes;
    this._NgFor_44_6.check_ngForOf(currVal_44_0_0,throwOnChange,false);
    this._NgFor_44_6.ngDoCheck(this,this._anchor_44,throwOnChange);
    const currVal_47_0_0:any = this.context.currentPmode;
    this._CrudButtonsComponent_47_3.check_current(currVal_47_0_0,throwOnChange,false);
    const currVal_47_0_1:any = this.context.form;
    this._CrudButtonsComponent_47_3.check_form(currVal_47_0_1,throwOnChange,false);
    const currVal_47_0_2:any = this.context.isNewMode;
    this._CrudButtonsComponent_47_3.check_isNewMode(currVal_47_0_2,throwOnChange,false);
    this._CrudButtonsComponent_47_3.ngDoCheck(this,this._el_47,throwOnChange);
    this._vc_25.detectChangesInNestedViews(throwOnChange);
    this._vc_44.detectChangesInNestedViews(throwOnChange);
    this._NgControlStatusGroup_3_5.checkHost(this,this,this._el_3,throwOnChange);
    const currVal_76:any = this.context.newName;
    if (import3.checkBinding(throwOnChange,this._expr_76,currVal_76)) {
      this.renderer.setElementProperty(this._el_12,'value',currVal_76);
      this._expr_76 = currVal_76;
    }
    const currVal_77:any = (this.context.actionType === '-1');
    if (import3.checkBinding(throwOnChange,this._expr_77,currVal_77)) {
      this.renderer.setElementProperty(this._el_27,'selected',currVal_77);
      this._expr_77 = currVal_77;
    }
    this.compView_1.internalDetectChanges(throwOnChange);
    this.compView_35.internalDetectChanges(throwOnChange);
    this.compView_37.internalDetectChanges(throwOnChange);
    this.compView_47.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this._vc_25.destroyNestedViews();
    this._vc_44.destroyNestedViews();
    this.compView_1.destroy();
    this.compView_35.destroy();
    this.compView_37.destroy();
    this.compView_47.destroy();
    this._NgSelectOption_27_3.ngOnDestroy();
    this._NgSelectMultipleOption_27_4.ngOnDestroy();
    this._NgForm_3_3.ngOnDestroy();
    this._ModalComponent_1_3.ngOnDestroy();
    this._NgSelectOption_41_3.ngOnDestroy();
    this._NgSelectMultipleOption_41_4.ngOnDestroy();
    this._CrudButtonsComponent_47_3.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 1) && (ngContentIndex == 0))) {
      cb(this._text_2,ctx);
      cb(this._el_3,ctx);
      cb(this._text_33,ctx);
    }
    if (((nodeIndex == 1) && (ngContentIndex == 1))) {  }
    if (((nodeIndex == 35) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 35) && (ngContentIndex == 1))) {
      cb(this._text_36,ctx);
      cb(this._el_37,ctx);
      cb(this._text_49,ctx);
    }
    if (((nodeIndex == 37) && (ngContentIndex == 0))) {
      cb(this._text_38,ctx);
      cb(this._el_39,ctx);
      cb(this._text_46,ctx);
      cb(this._el_47,ctx);
      cb(this._text_48,ctx);
    }
    if (((nodeIndex == 47) && (ngContentIndex == 0))) {  }
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 25)) { return new View_CrudComponent1(this.viewUtils,this,25,this._anchor_25,this._vc_25); }
    if ((nodeIndex == 44)) { return new View_CrudComponent2(this.viewUtils,this,44,this._anchor_44,this._vc_44); }
    return (null as any);
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.compView_1.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._ModalComponent_1_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'shown')) {
      this.context.actionType = this.context.pmodes[0];
      this.context.newName = '';
      const pd_sub_0:any = ((<any>this._el_12.focus()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_3(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._NgForm_3_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_12(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'keyup')) {
      const pd_sub_0:any = ((<any>(this.context.newName = $event.target.value)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_23(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'change')) {
      const pd_sub_0:any = ((<any>(this.context.actionType = $event.target.value)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_39(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'change')) {
      this.context.pmodeChanged($event.target.value);
      const pd_sub_0:any = ((<any>(this._el_39.value = (this.context.currentPmode && this.context.currentPmode.name))) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_47(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'add')) {
      const pd_sub_0:any = ((<any>this.context.add()) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'rename')) {
      const pd_sub_1:any = ((<any>this.context.rename()) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'reset')) {
      const pd_sub_2:any = ((<any>this.context.reset()) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'delete')) {
      const pd_sub_3:any = ((<any>this.context.delete()) !== false);
      result = (pd_sub_3 && result);
    }
    if ((eventName == 'save')) {
      const pd_sub_4:any = ((<any>this.context.save()) !== false);
      result = (pd_sub_4 && result);
    }
    return result;
  }
}