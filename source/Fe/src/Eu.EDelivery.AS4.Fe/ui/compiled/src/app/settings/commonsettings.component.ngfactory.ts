/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../src/app/settings/commonsettings.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../../../src/app/settings/settings.service';
import * as import10 from '@angular/forms/src/form_builder';
import * as import11 from '../../../../src/app/common/dialog.service';
import * as import12 from '../../../node_modules/@angular/forms/src/directives/reactive_directives/form_group_name.ngfactory';
import * as import13 from '../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import14 from '../common/text.directive.ngfactory';
import * as import15 from '../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import16 from '../../../node_modules/@angular/forms/src/directives/reactive_directives/form_control_name.ngfactory';
import * as import17 from '@angular/core/src/linker/view_container';
import * as import18 from '@angular/core/src/linker/element_ref';
import * as import19 from '../../../../src/app/common/text.directive';
import * as import20 from '@angular/forms/src/directives/default_value_accessor';
import * as import21 from '@angular/forms/src/directives/control_value_accessor';
import * as import22 from '@angular/forms/src/directives/reactive_directives/form_control_name';
import * as import23 from '@angular/forms/src/directives/ng_control';
import * as import24 from '@angular/forms/src/directives/ng_control_status';
import * as import25 from '@angular/forms/src/directives/reactive_directives/form_group_name';
import * as import26 from '@angular/forms/src/directives/control_container';
import * as import27 from '../../../node_modules/@angular/forms/src/directives/reactive_directives/form_group_directive.ngfactory';
import * as import28 from '../../../../src/app/common/input/input.component';
import * as import29 from '../common/input/input.component.ngfactory';
import * as import30 from '../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import31 from '../../../../src/app/settings/runtime.store';
import * as import32 from '@angular/core/src/linker/template_ref';
import * as import33 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import34 from '@angular/common/src/directives/ng_for';
import * as import35 from '@angular/forms/src/directives/reactive_directives/form_group_directive';
export class Wrapper_CommonSettingsComponent {
  /*private*/ _eventHandler:Function;
  context:import0.CommonSettingsComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  subscription0:any;
  constructor(p0:any,p1:any,p2:any) {
    this._changed = false;
    this.context = new import0.CommonSettingsComponent(p0,p1,p2);
    this._expr_0 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_settings(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.settings = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.isDirty.subscribe(_eventHandler.bind(view,'isDirty'))); }
  }
}
var renderType_CommonSettingsComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_CommonSettingsComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.CommonSettingsComponent>;
  _CommonSettingsComponent_0_3:Wrapper_CommonSettingsComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CommonSettingsComponent_Host0,renderType_CommonSettingsComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'as4-custom-settings',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_CommonSettingsComponent0(this.viewUtils,this,0,this._el_0);
    this._CommonSettingsComponent_0_3 = new Wrapper_CommonSettingsComponent(this.injectorGet(import9.SettingsService,this.parentIndex),this.injectorGet(import10.FormBuilder,this.parentIndex),this.injectorGet(import11.DialogService,this.parentIndex));
    this.compView_0.create(this._CommonSettingsComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._CommonSettingsComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.CommonSettingsComponent) && (0 === requestNodeIndex))) { return this._CommonSettingsComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._CommonSettingsComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._CommonSettingsComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const CommonSettingsComponentNgFactory:import8.ComponentFactory<import0.CommonSettingsComponent> = new import8.ComponentFactory<import0.CommonSettingsComponent>('as4-custom-settings',View_CommonSettingsComponent_Host0,import0.CommonSettingsComponent);
const styles_CommonSettingsComponent:any[] = ([] as any[]);
class View_CommonSettingsComponent1 extends import2.AppView<any> {
  _el_0:any;
  _FormGroupName_0_3:import12.Wrapper_FormGroupName;
  _ControlContainer_0_4:any;
  _NgControlStatusGroup_0_5:import13.Wrapper_NgControlStatusGroup;
  _text_1:any;
  _el_2:any;
  _el_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _el_7:any;
  _TextDirective_7_3:import14.Wrapper_TextDirective;
  _DefaultValueAccessor_7_4:import15.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_7_5:any[];
  _FormControlName_7_6:import16.Wrapper_FormControlName;
  _NgControl_7_7:any;
  _NgControlStatus_7_8:import13.Wrapper_NgControlStatus;
  _text_8:any;
  _el_9:any;
  _el_10:any;
  _TextDirective_10_3:import14.Wrapper_TextDirective;
  _DefaultValueAccessor_10_4:import15.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_10_5:any[];
  _FormControlName_10_6:import16.Wrapper_FormControlName;
  _NgControl_10_7:any;
  _NgControlStatus_10_8:import13.Wrapper_NgControlStatus;
  _text_11:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import17.ViewContainer) {
    super(View_CommonSettingsComponent1,renderType_CommonSettingsComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'tr',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._FormGroupName_0_3 = new import12.Wrapper_FormGroupName((<View_CommonSettingsComponent0>this.parentView)._ControlContainer_9_4,(null as any),(null as any));
    this._ControlContainer_0_4 = this._FormGroupName_0_3.context;
    this._NgControlStatusGroup_0_5 = new import13.Wrapper_NgControlStatusGroup(this._ControlContainer_0_4);
    this._text_1 = this.renderer.createText(this._el_0,'\n                        ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'td',new import3.InlineArray2(2,'class','action'),(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_2,'button',new import3.InlineArray4(4,'class','btn btn-flat','type','button'),(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_3,'i',new import3.InlineArray2(2,'class','fa fa-trash-o'),(null as any));
    this._text_5 = this.renderer.createText(this._el_0,'\n                        ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_0,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_6,'input',new import3.InlineArray8(6,'class','form-control','formControlName','key','type','text'),(null as any));
    this._TextDirective_7_3 = new import14.Wrapper_TextDirective(new import18.ElementRef(this._el_7),this.renderer);
    this._DefaultValueAccessor_7_4 = new import15.Wrapper_DefaultValueAccessor(this.renderer,new import18.ElementRef(this._el_7));
    this._NG_VALUE_ACCESSOR_7_5 = [this._DefaultValueAccessor_7_4.context];
    this._FormControlName_7_6 = new import16.Wrapper_FormControlName(this._ControlContainer_0_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_7_5);
    this._NgControl_7_7 = this._FormControlName_7_6.context;
    this._NgControlStatus_7_8 = new import13.Wrapper_NgControlStatus(this._NgControl_7_7);
    this._text_8 = this.renderer.createText(this._el_0,'\n                        ',(null as any));
    this._el_9 = import3.createRenderElement(this.renderer,this._el_0,'td',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_9,'input',new import3.InlineArray8(6,'class','form-control','formControlName','value','type','text'),(null as any));
    this._TextDirective_10_3 = new import14.Wrapper_TextDirective(new import18.ElementRef(this._el_10),this.renderer);
    this._DefaultValueAccessor_10_4 = new import15.Wrapper_DefaultValueAccessor(this.renderer,new import18.ElementRef(this._el_10));
    this._NG_VALUE_ACCESSOR_10_5 = [this._DefaultValueAccessor_10_4.context];
    this._FormControlName_10_6 = new import16.Wrapper_FormControlName(this._ControlContainer_0_4,(null as any),(null as any),this._NG_VALUE_ACCESSOR_10_5);
    this._NgControl_10_7 = this._FormControlName_10_6.context;
    this._NgControlStatus_10_8 = new import13.Wrapper_NgControlStatus(this._NgControl_10_7);
    this._text_11 = this.renderer.createText(this._el_0,'\n                    ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_3,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_3));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_7,new import3.InlineArray4(4,'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_7));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_10,new import3.InlineArray4(4,'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_10));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._el_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._el_7,
      this._text_8,
      this._el_9,
      this._el_10,
      this._text_11
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import19.TextDirective) && (7 === requestNodeIndex))) { return this._TextDirective_7_3.context; }
    if (((token === import20.DefaultValueAccessor) && (7 === requestNodeIndex))) { return this._DefaultValueAccessor_7_4.context; }
    if (((token === import21.NG_VALUE_ACCESSOR) && (7 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_7_5; }
    if (((token === import22.FormControlName) && (7 === requestNodeIndex))) { return this._FormControlName_7_6.context; }
    if (((token === import23.NgControl) && (7 === requestNodeIndex))) { return this._NgControl_7_7; }
    if (((token === import24.NgControlStatus) && (7 === requestNodeIndex))) { return this._NgControlStatus_7_8.context; }
    if (((token === import19.TextDirective) && (10 === requestNodeIndex))) { return this._TextDirective_10_3.context; }
    if (((token === import20.DefaultValueAccessor) && (10 === requestNodeIndex))) { return this._DefaultValueAccessor_10_4.context; }
    if (((token === import21.NG_VALUE_ACCESSOR) && (10 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_10_5; }
    if (((token === import22.FormControlName) && (10 === requestNodeIndex))) { return this._FormControlName_10_6.context; }
    if (((token === import23.NgControl) && (10 === requestNodeIndex))) { return this._NgControl_10_7; }
    if (((token === import24.NgControlStatus) && (10 === requestNodeIndex))) { return this._NgControlStatus_10_8.context; }
    if (((token === import25.FormGroupName) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 11)))) { return this._FormGroupName_0_3.context; }
    if (((token === import26.ControlContainer) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 11)))) { return this._ControlContainer_0_4; }
    if (((token === import24.NgControlStatusGroup) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 11)))) { return this._NgControlStatusGroup_0_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.context.index;
    this._FormGroupName_0_3.check_name(currVal_0_0_0,throwOnChange,false);
    this._FormGroupName_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatusGroup_0_5.ngDoCheck(this,this._el_0,throwOnChange);
    this._TextDirective_7_3.ngDoCheck(this,this._el_7,throwOnChange);
    this._DefaultValueAccessor_7_4.ngDoCheck(this,this._el_7,throwOnChange);
    const currVal_7_2_0:any = 'key';
    this._FormControlName_7_6.check_name(currVal_7_2_0,throwOnChange,false);
    this._FormControlName_7_6.ngDoCheck(this,this._el_7,throwOnChange);
    this._NgControlStatus_7_8.ngDoCheck(this,this._el_7,throwOnChange);
    this._TextDirective_10_3.ngDoCheck(this,this._el_10,throwOnChange);
    this._DefaultValueAccessor_10_4.ngDoCheck(this,this._el_10,throwOnChange);
    const currVal_10_2_0:any = 'value';
    this._FormControlName_10_6.check_name(currVal_10_2_0,throwOnChange,false);
    this._FormControlName_10_6.ngDoCheck(this,this._el_10,throwOnChange);
    this._NgControlStatus_10_8.ngDoCheck(this,this._el_10,throwOnChange);
    this._NgControlStatusGroup_0_5.checkHost(this,this,this._el_0,throwOnChange);
    this._NgControlStatus_7_8.checkHost(this,this,this._el_7,throwOnChange);
    this._NgControlStatus_10_8.checkHost(this,this,this._el_10,throwOnChange);
  }
  destroyInternal():void {
    this._FormControlName_7_6.ngOnDestroy();
    this._FormControlName_10_6.ngOnDestroy();
    this._FormGroupName_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_3(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.removeSetting(this.context.index)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_7(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_7_4.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_10(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_10_4.handleEvent(eventName,$event) && result);
    return result;
  }
}
var renderType_CommonSettingsComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,styles_CommonSettingsComponent,{});
export class View_CommonSettingsComponent0 extends import2.AppView<import0.CommonSettingsComponent> {
  _text_0:any;
  _el_1:any;
  _FormGroupDirective_1_3:import27.Wrapper_FormGroupDirective;
  _ControlContainer_1_4:any;
  _NgControlStatusGroup_1_5:import13.Wrapper_NgControlStatusGroup;
  _text_2:any;
  _el_3:any;
  compView_3:import2.AppView<import28.InputComponent>;
  _InputComponent_3_3:import29.Wrapper_InputComponent;
  _text_4:any;
  _el_5:any;
  _el_6:any;
  _el_7:any;
  _text_8:any;
  _el_9:any;
  _FormArrayName_9_3:import12.Wrapper_FormArrayName;
  _ControlContainer_9_4:any;
  _NgControlStatusGroup_9_5:import13.Wrapper_NgControlStatusGroup;
  _text_10:any;
  _el_11:any;
  _el_12:any;
  _text_13:any;
  _el_14:any;
  _text_15:any;
  _text_16:any;
  _el_17:any;
  _text_18:any;
  _text_19:any;
  _text_20:any;
  _anchor_21:any;
  /*private*/ _vc_21:import17.ViewContainer;
  _TemplateRef_21_5:any;
  _NgFor_21_6:import30.Wrapper_NgFor;
  _text_22:any;
  _text_23:any;
  _text_24:any;
  _text_25:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_CommonSettingsComponent0,renderType_CommonSettingsComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n        ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'form',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._FormGroupDirective_1_3 = new import27.Wrapper_FormGroupDirective((null as any),(null as any));
    this._ControlContainer_1_4 = this._FormGroupDirective_1_3.context;
    this._NgControlStatusGroup_1_5 = new import13.Wrapper_NgControlStatusGroup(this._ControlContainer_1_4);
    this._text_2 = this.renderer.createText(this._el_1,'\n            ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'as4-input',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_3 = new import29.View_InputComponent0(this.viewUtils,this,3,this._el_3);
    this._InputComponent_3_3 = new import29.Wrapper_InputComponent(this.parentView.injectorGet(import31.RuntimeStore,this.parentIndex));
    this._text_4 = this.renderer.createText((null as any),'\n                ',(null as any));
    this._el_5 = import3.createRenderElement(this.renderer,(null as any),'p',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_5,'button',new import3.InlineArray4(4,'class','btn btn-flat','type','button'),(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_6,'i',new import3.InlineArray2(2,'class','fa fa-plus'),(null as any));
    this._text_8 = this.renderer.createText((null as any),'\n                ',(null as any));
    this._el_9 = import3.createRenderElement(this.renderer,(null as any),'table',new import3.InlineArray4(4,'class','table table-condensed','formArrayName','setting'),(null as any));
    this._FormArrayName_9_3 = new import12.Wrapper_FormArrayName(this._ControlContainer_1_4,(null as any),(null as any));
    this._ControlContainer_9_4 = this._FormArrayName_9_3.context;
    this._NgControlStatusGroup_9_5 = new import13.Wrapper_NgControlStatusGroup(this._ControlContainer_9_4);
    this._text_10 = this.renderer.createText(this._el_9,'\n                    ',(null as any));
    this._el_11 = import3.createRenderElement(this.renderer,this._el_9,'tbody',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._el_12 = import3.createRenderElement(this.renderer,this._el_11,'tr',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_13 = this.renderer.createText(this._el_12,'\n                        ',(null as any));
    this._el_14 = import3.createRenderElement(this.renderer,this._el_12,'th',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_15 = this.renderer.createText(this._el_14,'Key',(null as any));
    this._text_16 = this.renderer.createText(this._el_12,'\n                        ',(null as any));
    this._el_17 = import3.createRenderElement(this.renderer,this._el_12,'th',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_18 = this.renderer.createText(this._el_17,'Value',(null as any));
    this._text_19 = this.renderer.createText(this._el_12,'\n                    ',(null as any));
    this._text_20 = this.renderer.createText(this._el_11,'\n                    ',(null as any));
    this._anchor_21 = this.renderer.createTemplateAnchor(this._el_11,(null as any));
    this._vc_21 = new import17.ViewContainer(21,11,this,this._anchor_21);
    this._TemplateRef_21_5 = new import32.TemplateRef_(this,21,this._anchor_21);
    this._NgFor_21_6 = new import30.Wrapper_NgFor(this._vc_21.vcRef,this._TemplateRef_21_5,this.parentView.injectorGet(import33.IterableDiffers,this.parentIndex),this.ref);
    this._text_22 = this.renderer.createText(this._el_11,'\n                ',(null as any));
    this._text_23 = this.renderer.createText((null as any),'\n            ',(null as any));
    this.compView_3.create(this._InputComponent_3_3.context);
    this._text_24 = this.renderer.createText(this._el_1,'\n        ',(null as any));
    this._text_25 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray4(4,'submit',(null as any),'reset',(null as any)),this.eventHandler(this.handleEvent_1));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_6,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_6));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._el_6,
      this._el_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._el_11,
      this._el_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._text_16,
      this._el_17,
      this._text_18,
      this._text_19,
      this._text_20,
      this._anchor_21,
      this._text_22,
      this._text_23,
      this._text_24,
      this._text_25
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import32.TemplateRef) && (21 === requestNodeIndex))) { return this._TemplateRef_21_5; }
    if (((token === import34.NgFor) && (21 === requestNodeIndex))) { return this._NgFor_21_6.context; }
    if (((token === import25.FormArrayName) && ((9 <= requestNodeIndex) && (requestNodeIndex <= 22)))) { return this._FormArrayName_9_3.context; }
    if (((token === import26.ControlContainer) && ((9 <= requestNodeIndex) && (requestNodeIndex <= 22)))) { return this._ControlContainer_9_4; }
    if (((token === import24.NgControlStatusGroup) && ((9 <= requestNodeIndex) && (requestNodeIndex <= 22)))) { return this._NgControlStatusGroup_9_5.context; }
    if (((token === import28.InputComponent) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 23)))) { return this._InputComponent_3_3.context; }
    if (((token === import35.FormGroupDirective) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 24)))) { return this._FormGroupDirective_1_3.context; }
    if (((token === import26.ControlContainer) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 24)))) { return this._ControlContainer_1_4; }
    if (((token === import24.NgControlStatusGroup) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 24)))) { return this._NgControlStatusGroup_1_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1_0_0:any = this.context.form;
    this._FormGroupDirective_1_3.check_form(currVal_1_0_0,throwOnChange,false);
    this._FormGroupDirective_1_3.ngDoCheck(this,this._el_1,throwOnChange);
    this._NgControlStatusGroup_1_5.ngDoCheck(this,this._el_1,throwOnChange);
    if (this._InputComponent_3_3.ngDoCheck(this,this._el_3,throwOnChange)) { this.compView_3.markAsCheckOnce(); }
    const currVal_9_0_0:any = 'setting';
    this._FormArrayName_9_3.check_name(currVal_9_0_0,throwOnChange,false);
    this._FormArrayName_9_3.ngDoCheck(this,this._el_9,throwOnChange);
    this._NgControlStatusGroup_9_5.ngDoCheck(this,this._el_9,throwOnChange);
    const currVal_21_0_0:any = this.context.settingControl;
    this._NgFor_21_6.check_ngForOf(currVal_21_0_0,throwOnChange,false);
    this._NgFor_21_6.ngDoCheck(this,this._anchor_21,throwOnChange);
    this._vc_21.detectChangesInNestedViews(throwOnChange);
    this._NgControlStatusGroup_1_5.checkHost(this,this,this._el_1,throwOnChange);
    this._NgControlStatusGroup_9_5.checkHost(this,this,this._el_9,throwOnChange);
    this.compView_3.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this._vc_21.destroyNestedViews();
    this.compView_3.destroy();
    this._FormArrayName_9_3.ngOnDestroy();
    this._FormGroupDirective_1_3.ngOnDestroy();
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 3) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 3) && (ngContentIndex == 1))) {
      cb(this._text_4,ctx);
      cb(this._el_5,ctx);
      cb(this._text_8,ctx);
      cb(this._el_9,ctx);
      cb(this._text_23,ctx);
    }
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 21)) { return new View_CommonSettingsComponent1(this.viewUtils,this,21,this._anchor_21,this._vc_21); }
    return (null as any);
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._FormGroupDirective_1_3.handleEvent(eventName,$event) && result);
    return result;
  }
  handleEvent_6(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context.addSetting()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}