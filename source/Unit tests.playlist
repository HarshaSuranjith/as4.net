<Playlist Version="1.0"><Add Test="Eu.EDelivery.AS4.UnitTests.Builders.GivenSoapEnvelopeBuilderFacts+GivenValidArgumentsBuilder.ThenBuilderBreaksDownCorrectly" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenSendingProcessingModeFacts+GivenDefaultSendingProcessingMode.ThenMessagePackagingIsDefault" /><Add Test="Eu.EDelivery.AS4.UnitTests.Security.GivenImpersonationFacts+GivenImpersonationFails.ThenImpersonateFails" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenUserMessageFacts+GivenValidArguments.ThenUserMessageToStringIsMessageId" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenInternalMessageFacts+GivenValidArgumentsInternalMessage.ThenGettingMessageIdsSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenAttachmentSignatureTransformFacts+GivenAttachmentSignatureTransformSucceeds.ThenOutputSucceedsWithXmlContentType (759300c3300a29b9f65b83dd14ef1ec87cc5ea3d)" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenSendingProcessingModeFacts+GivenDefaultSendingProcessingMode.ThenReceiptHandlingIsFalse" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Deliver.GivenUploadAttachmentsStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithValidAttachmentUploaderAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenSendingProcessingModeFacts+GivenDefaultSendingProcessingMode.ThenReliabilityIsNotNull" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenInternalMessageFacts+GivenValidArgumentsInternalMessage.ThenHasPayloadsIsCorrectFalse" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.SubmitModel.GivenCollaborationInfoFacts+GivenValidArguments.ThenTwoCollaborationInfosAreNotEqualForConversationId" /><Add Test="Eu.EDelivery.AS4.UnitTests.Strategies.GivenPayloadStrategyProviderFacts+GivenValidStrategy.ThenProviderGetsStrategy" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.GivenStepBuilderFacts+GivenValidArguments.ThenBuildSucceedsWithSubmitSteps" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.SubmitModel.GivenAgreementFacts+GivenValidArguments.ThenTwoAgreementsAreNotEqualForType" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenReceiveExceptionDecoratorStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithAS4ExceptionThrowedAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Serialization.GivenSoapEnvelopeSerializerFacts+GivenSoapEnvelopeSerializerSucceeds.ThenParseUserMessagePropertiesParsedCorrectlyAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Submit.GivenRetrieveSendingPModeStepFacts+GivenInalidArgumentsForExecute.ThenExecuteRetrievesPModeSucceedsWithTwoStepsAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Deliver.GivenCreateDeliverMessageStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithValidMessageInfoAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenSendingProcessingModeFacts+GivenDefaultSendingProcessingMode.ThenReceiptionAwerenessIsDefault" /><Add Test="Eu.EDelivery.AS4.UnitTests.Common.GivenRegistryFacts+GivenInvalidArgumentsRegistry.ThenProvidersDoesNotHasPayloadStrategy" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenUserMessageFacts+GivenValidArguments.ThenUserMessageHasDefaultsPartyReceiver" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Submit.GivenRetrievePayloadsStepFacts+GivenValidArgumentsToExecute.ThenExeucteReturnsAttachmentsFromPayloadsAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Strategies.GivenPayloadStrategyProviderFacts+GivenInvalidStrategy.ThenProviderNotGetsStrategy" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Notify.GivenCreateNotifyMessageStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithValidReceiptForMessageInfoAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenCreateAS4ReceiptStepFacts+GivenValidArguments.ThenExecuteSucceedsWithDefaultInternalMessageAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenInternalMessageFacts+GivenValidArgumentsInternalMessage.ThenNoAttachmentsAreAddedWithZeroPayloads" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenSendReceiptDecoratorStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithEmptySoapEnvelopeAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenAttachmentSignatureTransformFacts+GivenAttachmentSignatureTransformSucceeds.ThenOutputSucceedsWithSuportedType" /><Add Test="Eu.EDelivery.AS4.UnitTests.Builders.GivenSoapEnvelopeBuilderFacts+GivenValidArgumentsBuilder.ThenResultContainsSecurityHeader" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenAttachmentSignatureTransformFacts+GivenAttachmentSignatureTransformSucceeds.ThenAttachmentSignatureTransformReturnsExpectedUrl" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenBinarySecurityTokenReferenceFacts+GivenValidArgumentsForGetXml.ThenXmlContainsSecurityTokenReferenceElement" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.SubmitModel.GivenAgreementFacts+GivenValidArguments.ThenTwoAgreementsAreEqualForProperties" /><Add Test="Eu.EDelivery.AS4.UnitTests.Receivers.GivenOutMessageDatastoreReceiverFacts+GivenOutDatastoreReceiverSucceeds.ThenStartReceivingSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenReceiveUpdateDatastoreFacts+GivenValidArguments.ThenExecuteStepSucceedsAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenReceiveExceptionDecoratorStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithSignedErrorMessageAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.SubmitModel.GivenCollaborationInfoFacts+GivenValidArguments.ThenTwoCollaborationInfosAreNotEqualForAction" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenUserMessageFacts+GivenValidArguments.ThenUserMessageHasDefaultsPartySender" /><Add Test="Eu.EDelivery.AS4.UnitTests.Common.GivenGlobalConfigFacts+GivenValidArguments.ThenGetIdFormatSettingsSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Serialization.GivenMimeMessageSerializerFacts+GivenMimeMessageSerializerSucceeds.ThenDeserializeAS4MessageSucceedsForContentTypeAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenDecompressAttachmentsStepFacts+GivenValidArguments.ThenExecuteSucceedsWithNoCompressedAttachmentAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenReceivingProcessingModeFacts+GivenDefaultProcessingMode.ThenDeliverIsDefault" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenAttachmentSignatureTransformFacts+GivenAttachmentSignatureTransformSucceeds.ThenOutputSucceedsWithXmlContentType (c966073eeb2e779d52c024ada8ddc611c1804420)" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Deliver.GivenCreateDeliverMessageStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithValidFromPartyAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenReceiveUpdateDatastoreFacts.ThenExecuteStepUpdatesAsReceiptAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Common.GivenGlobalConfigFacts+GivenValidArguments.ThenGetPModeSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenInternalMessageFacts+GivenValidArgumentsInternalMessage.ThenAddAttachmentSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenIssuerSecurityTokenReferenceFacts+GivenValidArgumentsForGetXml.ThenGetXmlContainsX509SerialNumber" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenAS4MessageFacts+GivenAS4MessageSucceeds.ThenSaveToPullRequestCorrectlySerialized" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Send.GivenCompressPayloadsStepFacts+GivenCompressPayloadsStepSucceeds.ThenTransmitMessageSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenPartyFacts+GivenValidArguments.ThenPartyIsEmptyForRole" /><Add Test="Eu.EDelivery.AS4.UnitTests.Builders.GivenAS4MessageBuilderFacts+GivenAS4MessageBuiderFails.ThenBuildWithNullAsPModeFails" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenBinarySecurityTokenReferenceFacts+GivenValidArgumentsForGetXml.ThenXmlReferenceContainsValueTypeAttribute" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenBinarySecurityTokenReferenceFacts+GivenValidArgumentsForGetXml.ThenXmlReferenceContainsURIAttribute" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenPartyFacts+GivenValidArguments.ThenTwoPartiesAreEqualForObject" /><Add Test="Eu.EDelivery.AS4.UnitTests.Extensions.GivenIDictionaryExtensionFacts+GivenIDictionaryExtesionSucceeds.ThenFlattenSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenReceiveUpdateDatastoreFacts.ThenExecuteStepSucceedsAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.GivenStepBuilderFacts+GivenInvalidArguments.ThenWithOptionsBuildDoesNotContainsUpdateDataStore" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenPartyIdFacts+GivenValidArguments.ThenTwoPartyIdsAreEqualForIdAndType" /><Add Test="Eu.EDelivery.AS4.UnitTests.Utilities.IdGeneratorTest.ThenGenerateIdMachineNameCorrectIdGenerated" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenDeterminePModesStepFacts+GivenInvalidArguments.ThenAgreementRefIsNotEnoughAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenPartyIdFacts+GivenValidArguments.ThenTwoPartyIdsAreEqual" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenSendingProcessingModeFacts+GivenDefaultSendingProcessingMode.ThenProtocolIsNotNull" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Submit.GivenRetrieveSendingPModeStepFacts+GivenInalidArgumentsForExecute.ThenExecuteMethodRetrievesPModeFailsWithInvalidPModeAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.SubmitModel.GivenCollaborationInfoFacts+GivenInvalidArguments.ThenTwoCollaborationInfosAreNotEqualForNull" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.SubmitModel.GivenAgreementFacts+GivenValidArguments.ThenTwoAgreementsAreEqual" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenDeterminePModesStepFacts+GivenValidArguments.ThenPartyInfoMatchesAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenDeterminePModesStepFacts+GivenValidArguments.ThenPModeIsFoundWithIdAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.GivenCompositeStepFacts+GivenCompositeStepSucceeds.ThenTransmitMessageSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.GivenStepBuilderFacts+GivenValidArguments.ThenBuildSucceedsWithReceiveSteps" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenInternalMessageFacts+GivenValidArgumentsInternalMessage.ThenHasPayloadsIsCorrectTrue" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Deliver.GivenUploadAttachmentsStepFacts+GivenInvalidArguments.ThenExecuteStepFailsWithFailedAttachmentUploaderAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Send.GivenEncryptTransmitterFacts+GivenEncryptTransmitterSucceeds.ThenConfigureTransmitterSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Extensions.GivenIDictionaryExtensionFacts+GivenIDictionaryExtesionSucceeds.ThenMergeSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Send.GivenEncryptTransmitterFacts+GivenEncryptTransmitterFails.ThenConfigureTransmitterSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Receivers.GivenPollingReceiverFacts+GivenPollingReceiverFails.ThenTemplateFailsWithZeroPollingInterval" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenCreateAS4ReceiptStepFacts+GivenValidArguments.ThenExecuteSucceedsWithNRRFormatAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Send.GivenEncryptTransmitterFacts+GivenEncryptTransmitterSucceeds.ThenTransmitMessageSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Deliver.GivenCreateDeliverMessageStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithValidMessagePropertiesAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Send.GivenSigningAS4MessageStepFacts+GivenValidArgumentsExecute.ThenTransmitMessageSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Serialization.GivenSoapEnvelopeSerializerFacts+GivenSoapEnvelopeSerializerSucceeds.ThenDeserializeAS4MessageSucceedsAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Extensions.GivenIDictionaryExtensionFacts+GivenIDictionaryExtesionSucceeds.ThenReadOptionalPropertySucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.SubmitModel.GivenCollaborationInfoFacts+GivenValidArguments.ThenTwoCollaborationInfosAreNotEqualForService" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenDeterminePModesStepFacts+GivenValidArguments.ThenPartyInfoNotDefindedAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenAS4MessageFacts+GivenAS4MessageSucceeds.ThenSaveToMessageWithAttachmentsReturnsMimeMessage" /><Add Test="Eu.EDelivery.AS4.UnitTests.Builders.GivenAS4MessageBuilderFacts+GivenAS4MessageBuilderSucceeds.ThenBuilderBreaksDownTheCollectedInfo" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenSendingProcessingModeFacts+GivenDefaultSendingProcessingMode.ThenErrorHandlingIsFalse" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenPartyFacts+GivenValidArguments.ThenTwoPartiesAreNotEqualForPartyId" /><Add Test="Eu.EDelivery.AS4.UnitTests.Extensions.GivenIDictionaryExtensionFacts+GivenIDictionaryExtesionSucceeds.ThenReadMandatoryPropertySucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenDeterminePModesStepFacts+GivenValidArguments.ThenPartyWinsOverServiceActionAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenPartyIdFacts+GivenValidArguments.ThenTwoPartyIdsAreEqualForObject" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.SubmitModel.GivenAgreementFacts+GivenInvalidAgruments.ThenTwoAgreementsAreNotEqualForNull" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Send.GivenSendUpdateDatastoreFacts.ThenExecuteStepUpdateAsSentAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Deliver.GivenDeliverUpdateDatastoreStepFacts+GivenValidArguments.ThenExecuteMethodSucceedsWithValidUserMessageAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Strategies.GivenFilePayloadStrategyFacts+GivenFilePayloadStrategyFails.ThenRetrievePayloadFails" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Notify.GivenNotifyUpdateDatastoreStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithValidNotifyMessageAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Serialization.GivenSoapEnvelopeSerializerFacts+GivenSoapEnvelopeSerializerSucceeds.ThenXmlDocumentContainsOneMessagingHeader" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenReceivingProcessingModeFacts+GivenDefaultProcessingMode.ThenDuplicateDetectionIsFalse" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Send.GivenSigningAS4MessageStepFacts+GivenSigningStepFails.ThenTransmitMessageFails" /><Add Test="Eu.EDelivery.AS4.UnitTests.Common.GivenGlobalConfigFacts+GivenValidArguments.ThenGetConnectionStringSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Serialization.GivenMimeMessageSerializerFacts+GivenMimeMessageSerializerSucceeds.ThenSerializeAS4MessageSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenIssuerSecurityTokenReferenceFacts+GivenValidArgumentsForGetXml.ThenGetXmlContainsX509IssuerSerial" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenAS4MessageFacts+GivenAS4MessageSucceeds.ThenSaveToUserMessageCorrectlySerialized" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Deliver.GivenDeliverExceptionDecoratorStepFacts+GivenValidArguments.ThenExecuteStepSuccessfullyHandlesConnectionFailureExceptionAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Receivers.GivenOutMessageDatastoreReceiverFacts+GivenOutDatastoreReceiverSucceeds.ThenConfigureSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Builders.GivenSecurityHeaderBuilderFacts+GivenValidArgumentsBuilder.ThenBuilderMakesValidSecurityHeaderWithSignatureAlgorithm" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Repositories.GivenDatastoreRepositoryFacts+GivenValidArguments.ThenUpdateOutMessageSucceedsAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.SubmitModel.GivenAgreementFacts+GivenValidArguments.ThenTwoAgreementsAreNotEqualForPModeid" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenSendReceiptDecoratorStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithRepositoryCalledAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Send.GivenSendUpdateDatastoreFacts.ThenExecuteStepUpdatesAsReceiptAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Transformers.GivenAS4MessageTransformerFacts+GivenInvalidArgumentsToTransfrormer.ThenTransformFailsWithInvalidUserMessageWithSoapAS4StreamAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenReceivingProcessingModeFacts+GivenDefaultProcessingMode.ThenSigningVerificationIsDefault" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.SubmitModel.GivenCollaborationInfoFacts+GivenValidArguments.ThenTwoCollaborationInfosAreNotEqualForAgreementRef" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenInternalMessageFacts+GivenValidArgumentsInternalMessage.ThenInternalMessageHasPrefixFromSignalMessage" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenPartyIdFacts+GivenValidArguments.ThenTwoPartyIdsAreNotEqualForType" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenBinarySecurityTokenReferenceFacts+GivenInvalidArgumentsForGetSecurityToken.ThenGetSecurityTokenFailsWithUnsettedCertificate" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenKeyIdentifierSecurityTokenReferenceFacts+GivenValidArgumentsForGetXml.ThenGetXmlContainsKeyIdentifier" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenVerifySignatureAS4MessageStepFacts+GivenInvalidArguments.ThenExecuteStepSucceedsAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Builders.GivenAS4MessageBuilderFacts+GivenAS4MessageBuiderFails.ThenBuildSimpleUserMessageFailsWithNull" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenSendingProcessingModeFacts+GivenDefaultSendingProcessingMode.ThenEncryptionIsFalse" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenCreateAS4ReceiptStepFacts+GivenValidArguments.ThenExecuteSucceedsWithSigningReceiptAsync" /><Add Test="Eu.EDelivery.AS4.ServiceHandler.UnitTests.Agents.GivenAgentBaseFacts+GivenAgentBaseSuccess.ThenOpeningAChannelStartsTheReceiver" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenSendingProcessingModeFacts+GivenDefaultSendingProcessingMode.ThenOverrideIsFalse" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Repositories.GivenDatastoreRepositoryFacts+GivenValidArguments.ThenInsertOutExceptionSucceedsAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenCreateAS4ReceiptStepFacts+GivenInvalidArguments.ThenCertificateCannotBeRetrievedFromStoreAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenDeterminePModesStepFacts+GivenInvalidArguments.ThenServiceAndActionIsNotEnoughAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Common.GivenGlobalConfigFacts+GivenValidArguments.ThenGetProviderSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.SubmitModel.GivenCollaborationInfoFacts+GivenValidArguments.ThenTwoCollaborationInfosAreEqualForProperties" /><Add Test="Eu.EDelivery.AS4.UnitTests.Common.GivenDatastoreStepFacts.ThenExecuteStepSucceedsAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenPartyIdFacts+GivenInvalidArguments.ThenTwoPartyIdsAreNotEqualForNull" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenBinarySecurityTokenReferenceFacts+GivenValidArgumentsForGetSecurityToken.ThenBinarySecurityTokenIsAddedToXmlDocumentArgument" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Send.GivenSigningAS4MessageStepFacts+GivenValidArgumentsExecute.ThenMessageDontGetSignedWhenItsDisabledAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Submit.GivenStoreAS4MessageStepsFacts+GivenStoreAs4MessageStepsFails.ThenTransmitMessageFailsWithNullAS4MessageAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Send.GivenSendUpdateDatastoreFacts.ThenExecuteStepSucceedsAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Builders.GivenAS4MessageBuilderFacts+GivenAS4MessageBuilderSucceeds.ThenBuildUserMessageWithPModeSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Builders.GivenAS4MessageBuilderFacts+GivenAS4MessageBuilderSucceeds.ThenBuildMultipleTimesUniqueMessagesEveryTimeSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenBinarySecurityTokenReferenceFacts+GivenValidArgumentsForLoadXml.ThenLoadXmlFindsReferenceId" /><Add Test="Eu.EDelivery.AS4.UnitTests.Common.GivenGlobalConfigFacts+GivenValidArguments.ThenGetSubmitAgentsSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Common.GivenRegistryFacts+GivenValidArgumentsRegistry.ThenGetWebPayloadStrategyProvider" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenPartyFacts+GivenInvalidArguments.ThenTwoPartiesAreNotEqualForNull" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenDeterminePModesStepFacts+GivenValidArguments.ThenPModeIdWinsOverPartyInfoAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenReceiveUpdateDatastoreFacts+GivenValidArguments.ThenExecuteStepSucceedsWithDeliveringAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.GivenStepBuilderFacts+GivenValidArguments.ThenBuildSucceedsWithDeliverSteps" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Deliver.GivenCreateDeliverMessageStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithvalidToPartyAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenReceivingProcessingModeFacts+GivenDefaultProcessingMode.ThenReceiptHandlingIsDefault" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenReceiveExceptionDecoratorStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithInsertedOutMessageAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Deliver.GivenCreateDeliverMessageStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithValidUserMessageAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Submit.GivenStoreAS4MessageStepsFacts+GivenStoreAs4MessageStepsSucceeds.ThenTransmitMessageSucceedsAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenReceiveUpdateDatastoreFacts+GivenValidArguments.ThenExecuteStepUpdatesDuplicateUserMessageAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Transformers.GivenAS4MessageTransformerFacts+GivenValidReceivedMessageToTransformer.ThenTransfromSuceedsWithSoapdAS4StreamAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Builders.GivenSoapEnvelopeBuilderFacts+GivenValidArgumentsBuilder.ThenResultContainsBody" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenDeterminePModesStepFacts+GivenValidArguments.ThenPartiesWinsOverServiceActionAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenReceiveUpdateDatastoreFacts+GivenValidArguments.ThenExecuteStepUpdatesAsErrorAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Common.GivenRegistryFacts+GivenValidArgumentsRegistry.ThenGetFilePayloadStrategyProvider" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Deliver.GivenSendDeliverMessageStepFacts+GivenInvalidArguments.ThenExecuteStepFailsWithFailedSenderAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenReceiveExceptionDecoratorStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithInsertedInExceptionAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Notify.GivenSendNotifyMessageStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithValidSenderAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Repositories.GivenMimeTypeRepositoryFacts+GivenInvalidArguments.ThenGetsExtensionFailsWithInvalidMimeContentType" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenInternalMessageFacts+GivenInvalidArgumentsInternalMessage.ThenGettingMessageIdsFailsWitEmptyAS4Message" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenInternalMessageFacts+GivenValidArgumentsInternalMessage.ThenHasAttachmentsIsCorrectFalse" /><Add Test="Eu.EDelivery.AS4.UnitTests.Builders.GivenSoapEnvelopeBuilderFacts+GivenValidArgumentsBuilder.ThenBuilderStartsWithEmptyEnvelope" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenInternalMessageFacts+GivenInvalidArgumentsInternalMessage.ThenGettingMessageIdsFailsWithNullAS4Message" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenCreateAS4ReceiptStepFacts+GivenValidArguments.ThenExecuteSucceedsWithReceiptTypeAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenReceiveExceptionDecoratorStepFacts+GivenInvalidArguments.ThenCertificateCannotBeRetrievedFromStoreAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Notify.GivenSendNotifyMessageStepFacts+GivenInvalidArguments.ThenExecuteStepFailsWithConnectionFailureAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenAS4MessageFacts+GivenAS4MessageSucceeds.ThenSaveToMessageWithoutAttachmentsReturnsSoapMessage" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenBinarySecurityTokenReferenceFacts+GivenValidArgumentsForLoadXml.ThenLoadXmlCorrectlyLoadCertificate" /><Add Test="Eu.EDelivery.AS4.UnitTests.Extensions.GivenIDictionaryExtensionFacts+GivenIDictionaryExtensionsFails.ThenReadMandatoryPropertyFails" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Send.GivenEncryptTransmitterFacts+GivenEncryptTransmitterFails.ThenTransmitMessageFails" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenSendingProcessingModeFacts+GivenDefaultSendingProcessingMode.ThenExceptionHandlingIsFalse" /><Add Test="Eu.EDelivery.AS4.UnitTests.Serialization.GivenSoapEnvelopeSerializerFacts+GivenSoapEnvelopeSerializerSucceeds.ThenParseUserMessageSenderCorrectly" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenReceiveUpdateDatastoreFacts+GivenValidArguments.ThenExecuteStepUpdatesAsReceiptAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenReceiveUpdateDatastoreFacts.ThenExecuteStepUpdatesAsErrorAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenPartyFacts+GivenValidArguments.ThenTwoPartiesAreEqual" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Repositories.GivenMimeTypeRepositoryFacts+GivenValidArguments.ThenGetsExtensionSucceedsWithValidMimeContentType" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.GivenStepBuilderFacts+GivenValidArguments.ThenBuildSucceedsWithSendSteps" /><Add Test="Eu.EDelivery.AS4.ServiceHandler.UnitTests.Model.GivenServiceFacts+GivenServiceSucceeds.ThenTwoServicesAreEqualSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenAttachmentSignatureTransformFacts+GivenAttachmentSignatureTransformFails.ThenGetOutputFailsWithUnsuporrtedType" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Deliver.GivenCreateDeliverMessageStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithValidServiceAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenAttachmentFacts+GivenValidArguments.ThenAttachmentHasDefaults" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenKeyIdentifierSecurityTokenReferenceFacts+GivenValidArgumentsForGetXml.ThenGetXmlContainsKeyIdentifierInnerText" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Repositories.GivenDatastoreRepositoryFacts+GivenValidArguments.ThenInsertInMessageSucceedsAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenIssuerSecurityTokenReferenceFacts+GivenValidArgumentsForGetXml.ThenGetXmlContainsSecurityTokenReference" /><Add Test="Eu.EDelivery.AS4.UnitTests.Builders.GivenSoapEnvelopeBuilderFacts+GivenValidArgumentsBuilder.ThenResultContainsHeader" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.GivenCompositeStepFacts+GivenCompositeStepFails.ThenCreatingTransmitterFails" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenBinarySecurityTokenReferenceFacts+GivenValidArgumentsForGetSecurityToken.ThenSecurityTokenContainsBinarySecurityToken" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenReceiveUpdateDatastoreFacts+GivenValidArguments.ThenExecuteStepIsTestUserMessageAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenKeyIdentifierSecurityTokenReferenceFacts+GivenValidArgumentsForGetXml.ThenGetXmlContainsSecurityTokenReference" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Send.GivenSigningAS4MessageStepFacts+GivenSigningStepFails.ThenConfigureTransmitterFails" /><Add Test="Eu.EDelivery.AS4.UnitTests.Builders.GivenSecurityHeaderBuilderFacts+GivenValidArgumentsBuilder.ThenBuilderMakesValidSecurityHeaderWithSecurityTokenReference" /><Add Test="Eu.EDelivery.AS4.UnitTests.Transformers.GivenSubmitMessageXmlTransformerFacts+GivenValidArgumentsToTransform.ThenTransformSucceedsWithPModeIdAsync" /><Add Test="Eu.EDelivery.AS4.ServiceHandler.UnitTests.Model.GivenServiceFacts+GivenServiceSucceeds.ThenGetHashCodeSucceeds" /><Add Test="Eu.EDelivery.AS4.ServiceHandler.UnitTests.Agents.GivenAgentBaseFacts+GivenAgentBaseSuccess.ThenChannelTransmitsSuccessfullyMessages" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Repositories.GivenDatastoreRepositoryFacts+GivenValidArguments.ThenGetOutMessageSucceeded" /><Add Test="Eu.EDelivery.AS4.UnitTests.Common.GivenDatastoreStepFacts.ThenExecuteStepUpdatesAsReceiptAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Builders.GivenAS4MessageBuilderFacts+GivenAS4MessageBuilderSucceeds.ThenBuildSimpleUserMessageSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Repositories.GivenDatastoreRepositoryFacts+GivenValidArguments.ThenInsertInExceptionSucceedsAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Common.GivenDatastoreStepFacts.ThenExecuteStepUpdatesAsErrorAsync" /><Add Test="Eu.EDelivery.AS4.ServiceHandler.UnitTests.Model.GivenServiceFacts+GivenServiceFails.ThenTwoServicesAreEqualFails" /><Add Test="Eu.EDelivery.AS4.UnitTests.Builders.GivenSoapEnvelopeBuilderFacts+GivenValidArgumentsBuilder.ThenResultContainsEnvelope" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Deliver.GivenSendDeliverMessageStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithValidSenderAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenReceivingProcessingModeFacts+GivenDefaultProcessingMode.ThenErrorHandlingIsDefault" /><Add Test="Eu.EDelivery.AS4.UnitTests.Transformers.GivenSubmitMessageXmlTransformerFacts+GivenValidArgumentsToTransform.ThenPModeIsNotPartOfTheSerializationAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenSendingProcessingModeFacts+GivenDefaultSendingProcessingMode.ThenSigningIsFalse" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenCollaborationInfoFacts+GivenValidArguments.ThenCollaborationInfoHasDefaults" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenKeyIdentifierSecurityTokenReferenceFacts+GivenValidArgumentsForGetXml.ThenGetXmlContainsKeyIdentifierValueTypeAttribute" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Deliver.GivenCreateDeliverMessageStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithValidAgreementRefAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenInternalMessageFacts+GivenValidArgumentsInternalMessage.ThenHasAttachmentsIsCorrectTrue" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenReceiveExceptionDecoratorStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithoutThrowedExceptionAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenBinarySecurityTokenReferenceFacts+GivenValidArgumentsForGetSecurityToken.ThenSecurityTokenContainsValueTypeAttribute" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.SubmitModel.GivenAgreementFacts+GivenValidArguments.ThenTwoAgreementsAreEqualForObject" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenIssuerSecurityTokenReferenceFacts+GivenValidArgumentsForGetXml.ThenGetXmlContainsX509IssuerName" /><Add Test="Eu.EDelivery.AS4.UnitTests.Utilities.IdGeneratorTest.ThenGenerateIdGuidAndIpAddressCorrectIdGenerated" /><Add Test="Eu.EDelivery.AS4.UnitTests.Common.GivenGlobalConfigFacts+GivenValidArguments.ThenRetrieveLocalSettingsSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenSendingProcessingModeFacts+GivenDefaultSendingProcessingMode.ThenPushConfigurationIsDefault" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Repositories.GivenDatastoreRepositoryFacts+GivenValidArguments.ThenUpdateInMessageSucceedsAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenPartyFacts+GivenValidArguments.ThenTwoPartiesAreNotEqualForRole" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenSendReceiptDecoratorStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithReceiptAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenSendingProcessingModeFacts+GivenDefaultSendingProcessingMode.ThenTlsConfigurationIsNotNull" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenPartyFacts+GivenValidArguments.ThenTwoPartiesAreEqualForRolAndPartyId" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenReceivingProcessingModeFacts+GivenDefaultProcessingMode.ThenDecryptionIsDefault" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Send.GivenSendUpdateDatastoreFacts.ThenExecuteStepUpdatesAsErrorAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Repositories.GivenDatastoreRepositoryFacts+GivenValidArguments.ThenGetInMessageSucceeded" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenVerifySignatureAS4MessageStepFacts+GivenValidArguments.ThenExecuteStepSucceedsAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenKeyIdentifierSecurityTokenReferenceFacts+GivenValidArgumentsForGetXml.ThenGetXmlContainsKeyIdentifierEncodingTypeAttribute" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenCollaborationInfoFacts+GivenValidArguments.ThenCollaborationInfoHasProperties" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Deliver.GivenDeliverExceptionDecoratorStepFacts+GivenValidArguments.ThenExecuteStepSuccessfullyHandlesExceptionAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Serialization.GivenSoapEnvelopeSerializerFacts+GivenSoapEnvelopeSerializerSucceeds.ThenParseUserMessageCollaborationInfoCorrectly" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Notify.GivenCreateNotifyMessageStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithValidReceiptForStatusInfoAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenReceivingProcessingModeFacts+GivenDefaultProcessingMode.ThenExceptionHandlingIsDefault" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenBinarySecurityTokenReferenceFacts+GivenValidArgumentsForGetXml.ThenXmlContainsReferenceChildElement" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenBinarySecurityTokenReferenceFacts+GivenValidArgumentsForGetSecurityToken.ThenSecurityTokenContainsIdAttribute" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenSendingProcessingModeFacts+GivenDefaultSendingProcessingMode.ThenProtocolIsDefault" /><Add Test="Eu.EDelivery.AS4.UnitTests.Extensions.GivenIDictionaryExtensionFacts+GivenIDictionaryExtesionSucceeds.ThenDemoteSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Serialization.GivenMimeMessageSerializerFacts+GivenMimeMessageSerializerSucceeds.ThenAttachmentContentTypeIsNotNullAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Submit.GivenRetrievePayloadsStepFacts+GivenValidArgumentsToExecute.ThenExecuteReturnsZeroAttachmentsAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Receivers.GivenPollingReceiverFacts+GivenPollingReceiverSucceeds.ThenStartPollingSucceeds" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenSendingProcessingModeFacts+GivenDefaultSendingProcessingMode.ThenPullConfigurationIsNotNull" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Repositories.GivenDatastoreRepositoryFacts+GivenValidArguments.ThenInsertOutMessageSucceedsAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenInternalMessageFacts+GivenInvalidArgumentsInternalMessage.ThenHasAttachmentsFailsWithNullAS4Message" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.SubmitModel.GivenAgreementFacts+GivenValidArguments.ThenTwoAgreementsAreNotEqualForValue" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenBinarySecurityTokenReferenceFacts+GivenValidArgumentsForGetSecurityToken.ThenSecurityTokenContainsEncodingTypeAttribute" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.SubmitModel.GivenCollaborationInfoFacts+GivenValidArguments.ThenTwoCollaborationInfosAreEqual" /><Add Test="Eu.EDelivery.AS4.UnitTests.Builders.GivenSecurityHeaderBuilderFacts+GivenValidArgumentsBuilder.ThenBuilderMakesValidEmptySecurityHeader" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenPartyFacts+GivenValidArguments.ThenPartyIsEmptyForPartyId" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.SubmitModel.GivenCollaborationInfoFacts+GivenValidArguments.ThenTwoCollaborationInfosAreEqualForObject" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenCreateAS4ReceiptStepFacts+GivenValidArguments.ThenExecuteSucceedsWithSameReferenceTagsAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenPartyIdFacts+GivenValidArguments.ThenTwoPartyIdsAreNotEqualForId" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Notify.GivenCreateNotifyMessageStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithValidReceiptForCopiedReceiptAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Serialization.GivenSoapEnvelopeSerializerFacts+GivenSoapEnvelopeSerializerSucceeds.ThenParseUserMessageReceiverCorrectly" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenSendingProcessingModeFacts+GivenDefaultSendingProcessingMode.ThenReceiptionAwerenessIsNotNull" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenDecompressAttachmentsStepFacts+GivenValidArguments.ThenExecuteSucceedsWithValidAttachmentsAsync" /><Add Test="Eu.EDelivery.AS4.ServiceHandler.UnitTests.Agents.GivenAgentBaseFacts+GivenAgentBaseFails.ThenCreateChannelFails" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.SubmitModel.GivenCollaborationInfoFacts+GivenValidArguments.ThenCollaborationInfoHasDefaults" /><Add Test="Eu.EDelivery.AS4.UnitTests.Model.GivenInternalMessageFacts+GivenValidArgumentsInternalMessage.ThenInternalMessageHasPrefixFromUserMessage" /><Add Test="Eu.EDelivery.AS4.UnitTests.Signing.GivenIssuerSecurityTokenReferenceFacts+GivenValidArgumentsForGetXml.ThenGetXmlContainsX509Data" /><Add Test="Eu.EDelivery.AS4.UnitTests.Serialization.GivenMimeMessageSerializerFacts+GivenMimeMessageSerializerFails.ThenDeserializeFailsWithInvalidContentTypeAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Steps.Receive.GivenReceiveExceptionDecoratorStepFacts+GivenValidArguments.ThenExecuteStepSucceedsWithCallbackReplyPatternAsync" /><Add Test="Eu.EDelivery.AS4.UnitTests.Strategies.GivenFilePayloadStrategyFacts+GivenFilePayloadStrategySucceeds.ThenRetrievePayloadSucceeds" /></Playlist>